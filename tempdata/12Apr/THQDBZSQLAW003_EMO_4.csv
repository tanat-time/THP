" CREATE         PROCEDURE [dbo].[lock_data_emo_list_more4] AS DECLARE @Error INT SET NOCOUNT OFF DECLARE @rt int  -- update emo_list set emo_reserver = 99998,emo_reserve_dte_tme = '01 jan 2100 00:00:00' -- where cashed_pstcde_id = 0 and --(emo_status2 is null or emo_status3 is null)  --and (EMO_STATUS5 is null and EMO_STATUS6 is null) ----add 28/11/2559 --and emo_reserver is null --and emo_reserve_dte_tme is null  --and DATEADD(Month, 4, convert(varchar,substring(emo_nbr,7,6),111)) < getdate()   --update  emo_list set emo_reserver = 99998,emo_reserve_dte_tme = '01 jan 2100 00:00:00' --where cashed_pstcde_id = 0 and --(emo_status2 is null or emo_status3 is null)  --and (EMO_STATUS5 is not null or EMO_STATUS6 is not null) ----add 28/11/2559 --and emo_reserver is null --and emo_reserve_dte_tme is null  --and DATEADD(Month, 20, convert(varchar,substring(emo_nbr,7,6),111)) < getdate()  --datediff(month,convert(varchar,substring(emo_nbr,7,6),111),getdate()) > 4 --commit  --lock 4 month  update emo_list   set emo_reserver = 99998,emo_reserve_dte_tme = '01 jan 2100 00:00:00'  where cashed_pstcde_id = 0 and (emo_status2 is null or emo_status3 is null) and ((emo_reserver is null and emo_reserve_dte_tme is null ) or (emo_reserver = 0 and EMO_STATUS8 is null)) and convert(varchar(4),DATEADD(Month, 4, emo_status1),12) < convert(varchar(4),DATEADD(Month, 0, GETDATE()),12) and emo_nbr not in (select emo_nbr from EMO_LIST_TANACHART)  --unlock Thanachart 4 month because new ca lock 4 month but tanachart lock 6 month  update emo_list   set emo_reserver = 0,emo_reserve_dte_tme = getdate(),EMO_STATUS8 = getdate()  where cashed_pstcde_id = 0 and (emo_status2 is null or emo_status3 is null) and convert(varchar(4),DATEADD(Month, 4, emo_status1),12) < convert(varchar(4),DATEADD(Month, 0, GETDATE()),12) and emo_nbr in (select emo_nbr from EMO_LIST_TANACHART)  --lock Thanachart and move 6 month update emo_list  set emo_reserver = 99998,emo_reserve_dte_tme = '01 jan 2100 00:00:00' where cashed_pstcde_id = 0 and (emo_status2 is null or emo_status3 is null) and convert(varchar(4),DATEADD(Month, 6, emo_status1),12) < convert(varchar(4),DATEADD(Month, 0, GETDATE()),12) and emo_nbr in (select emo_nbr from EMO_LIST_TANACHART)  insert into [dbo].[EMO_LIST_EXPIRED_TANACHAT] select * from emo_list where cashed_pstcde_id = 0 and (emo_status2 is null or emo_status3 is null) and convert(varchar(4),DATEADD(Month, 6, emo_status1),12) < convert(varchar(4),DATEADD(Month, 0, GETDATE()),12) and emo_nbr in (select emo_nbr from EMO_LIST_TANACHART)  SET @rt = @@ROWCOUNT if (@rt > 0)  	 BEGIN 	      delete from emo_list 		  where cashed_pstcde_id = 0 and 		  (emo_status2 is null or emo_status3 is null) and 		  convert(varchar(4),DATEADD(Month, 6, emo_status1),12) < convert(varchar(4),DATEADD(Month, 0, GETDATE()),12) and 		  emo_nbr in (select emo_nbr from EMO_LIST_TANACHART) 	 END      --เดือนที่หมดอายุ < เดือนที่รัน job --run job ทุกวันที่ 1 ของเดือน เวลา 00.01 น.   ",9403,9394,9,868734,682,28210
"()begin try  select (dense_rank() over(order by (case when at.transaction_type = 4 then case at.dtc_state when 1 then 'Active' when 2 then 'Prepared' when 3 then 'Committed' when 4 then 'Aborted' when 5 then 'Recovered' end else case at.transaction_state when 0 then 'Invalid' when 1 then 'Initialized' when 2 then 'Active' when 3 then 'Ended' when 4 then 'Commit Started' when 5 then 'Prepared' when 6 then 'Committed' when 7 then 'Rolling Back' when 8 then 'Rolled Back' end end)))%2 as l1 ,       (dense_rank() over(order by (case when at.transaction_type = 4 then case at.dtc_state when 1 then 'Active' when 2 then 'Prepared' when 3 then 'Committed' when 4 then 'Aborted' when 5 then 'Recovered' end else case at.transaction_state when 0 then 'Invalid' when 1 then 'Initialized' when 2 then 'Active' when 3 then 'Ended' when 4 then 'Commit Started' when 5 then 'Prepared' when 6 then 'Committed' when 7 then 'Rolling Back' when 8 then 'Rolled Back' end end),st.session_id, s.host_name, s.program_name, s.login_name, s.login_time))%2 as l2 ,       (dense_rank() over(order by (case when at.transaction_type = 4 then case at.dtc_state when 1 then 'Active' when 2 then 'Prepared' when 3 then 'Committed' when 4 then 'Aborted' when 5 then 'Recovered' end else case at.transaction_state when 0 then 'Invalid' when 1 then 'Initialized' when 2 then 'Active' when 3 then 'Ended' when 4 then 'Commit Started' when 5 then 'Prepared' when 6 then 'Committed' when 7 then 'Rolling Back' when 8 then 'Rolled Back' end end),st.session_id, s.host_name, s.program_name, s.login_name, s.login_time, dt.transaction_id))%2 as l3 ,       (dense_rank() over(order by (case when at.transaction_type = 4 then case at.dtc_state when 1 then 'Active' when 2 then 'Prepared' when 3 then 'Committed' when 4 then 'Aborted' when 5 then 'Recovered' end else case at.transaction_state when 0 then 'Invalid' when 1 then 'Initialized' when 2 then 'Active' when 3 then 'Ended' when 4 then 'Commit Started' when 5 then 'Prepared' when 6 then 'Committed' when 7 then 'Rolling Back' when 8 then 'Rolled Back' end end),st.session_id, s.host_name, s.program_name, s.login_name, s.login_time, dt.transaction_id ,(case when obj.name is null then 'Other resources' else obj.name end)))%2 as l4 ,       (dense_rank() over(order by (case when at.transaction_type = 4 then case at.dtc_state when 1 then 'Active' when 2 then 'Prepared' when 3 then 'Committed' when 4 then 'Aborted' when 5 then 'Recovered' end else case at.transaction_state when 0 then 'Invalid' when 1 then 'Initialized' when 2 then 'Active' when 3 then 'Ended' when 4 then 'Commit Started' when 5 then 'Prepared' when 6 then 'Committed' when 7 then 'Rolling Back' when 8 then 'Rolled Back' end end),st.session_id, s.host_name, s.program_name, s.login_name, s.login_time, dt.transaction_id,(case when obj.name is null then 'Other resources' else obj.name end),tl.resource_type))%2 as l5 ,       dense_rank() over(partition by case when at.transaction_type =4 then case at.dtc_state when 1 then 2 when 2 then 5 when 3 then 6 when 4 then 9 when 5 then 10 else at.dtc_state*2 end else at.transaction_state end order by dt.transaction_id)as rank ,       st.session_id ,       s.host_name ,       s.program_name ,       s.login_name ,       s.login_time ,       s.host_process_id ,       dt.transaction_id as tran_id ,       at.name ,       at.transaction_begin_time as tran_start_time ,       case when at.transaction_type = 4                  then case at.dtc_state                                  when 1 then 'Active'                                  when 2 then 'Prepared'                                  when 3 then 'Committed'                                  when 4 then 'Aborted'                                  when 5 then 'Recovered'                          end                  else case at.transaction_state                                  when 0 then 'Invalid'                                  when 1 then 'Initialized'                                  when 2 then 'Active'                                  when 3 then 'Ended'                                  when 4 then 'Commit Started'                                  when 5 then 'Prepared'                                  when 6 then 'Committed'                                  when 7 then 'Rolling Back'                                  when 8 then 'Rolled Back'                          end          end as state ,       case when at.transaction_type = 4                  then case at.dtc_isolation_level                                  when 0xffffffff then 'Unknown'                                  when 0x10 then 'Chaos'                                  when 0x100 then 'Read Uncommitted'                                  when 0x1000 then 'Read Committed'                                  when 0x10000 then 'Repeatable Read'                                  when 0x100000 then 'Serializable'                                  when 0x100000 then 'Isolated'                          end                  else case Convert(int,r.transaction_isolation_level)                                     when 1 then 'Read Uncommitted'                                   when 2 then 'Read Committed'                                  when 3 then 'Repeatable Read'                                  when 4 then 'Serializable'                                  when 5 then 'Snapshot'                                  else 'Unknown'                          end          end as transaction_isolation_level  ,       at.transaction_type as tran_type ,       (select count(*) from sys.dm_tran_locks tlock where  (tlock.request_owner_id = dt.transaction_id and tlock.resource_database_id = db_id()) ) as 'total' ,       tl.resource_type ,       case when obj.name is null then 'Other resources' else obj.name end as resource_name ,       convert( varchar,tl.request_mode) as request_mode ,       (select count(*) from sys.dm_tran_locks tlock left outer join sys.partitions pt1 on ( pt1.hobt_id = tlock.resource_associated_entity_id ) left outer join sys.objects obj1 on ( obj1.object_id in (pt1.object_id, tlock.resource_associated_entity_id) )  where ( 1 = (case when obj.object_id is null then 1 else case when obj1.object_id = obj.object_id then 1 else 0 end end ) ) and (tlock.resource_type = tl.resource_type) and (tlock.request_mode = tl.request_mode) and (tlock.request_owner_id = dt.transaction_id) and tlock.resource_database_id = db_id() and (tlock.request_status = 'GRANT') ) as 'Granted'  ,       (select count(*) from sys.dm_tran_locks tlock left outer join sys.partitions pt1 on ( pt1.hobt_id = tlock.resource_associated_entity_id ) left outer join sys.objects obj1 on ( obj1.object_id in (pt1.object_id, tlock.resource_associated_entity_id) )  where ( 1 = (case when obj.object_id is null then 1 else case when obj1.object_id = obj.object_id then 1 else 0 end end ) ) and (tlock.resource_type = tl.resource_type) and (tlock.request_mode = tl.request_mode) and (tlock.request_owner_id = dt.transaction_id) and tlock.resource_database_id = db_id() and (tlock.request_status = 'WAIT') ) as 'Waiting' ,       (select count(*) from sys.dm_tran_database_transactions where transaction_id = dt.transaction_id) as db_span_count ,       st.is_local  from    sys.dm_tran_database_transactions dt  left outer join sys.dm_tran_locks tl on ( (tl.request_owner_id = dt.transaction_id) and ( tl.resource_database_id = DB_ID() ) )  inner join sys.dm_tran_active_transactions at  on (at.transaction_id = dt.transaction_id)    inner join sys.dm_tran_session_transactions st  on (st.transaction_id = dt.transaction_id)  left outer join sys.dm_exec_sessions s on ( st.session_id = s.session_id )  left outer join sys.dm_exec_requests r on (r.transaction_id = dt.transaction_id)   left outer join sys.partitions pt on ( pt.hobt_id = case when tl.resource_type in ('RID', 'KEY', 'PAGE', 'EXTENT') then (tl.resource_associated_entity_id) else null end  )      left outer join sys.objects obj on ( obj.object_id = ( case when tl.resource_type in ('TABLE') then tl.resource_associated_entity_id when tl.resource_type in ('RID', 'KEY', 'PAGE', 'EXTENT') then pt.object_id else null end ) )  where (dt.database_id = DB_ID()) and (st.is_user_transaction=1)  group by        st.session_id, s.host_name, s.program_name, s.login_name, s.login_time, s.host_process_id, dt.transaction_id,at.name, at.transaction_begin_time, at.transaction_state, at.dtc_state, r.transaction_isolation_level, at.dtc_isolation_level, at.transaction_type, obj.object_id, obj.name, tl.resource_type, tl.request_mode, st.is_local order by  st.session_id, dt.transaction_id,at.name, r.transaction_isolation_level, at.transaction_type, obj.object_id, obj.name, tl.resource_type, tl.request_mode  end try  begin catch  select 1 as rank, 1 as session_id, 1 as host_name, 1 as program_name, 1 as login_name, 1 as login_time, 1 as host_process_id, 1 as tran_id, 1 as name, 1 as tran_start_time, 1 as state, 1 as transaction_isolation_level, 1 as tran_type, 1 as total, 1 as resource_type ,       ERROR_NUMBER()  as resource_name ,       ERROR_SEVERITY() as request_mode ,       ERROR_STATE() as Granted ,       ERROR_MESSAGE() as Waiting ,       1 as db_span_count, 1 as is_local ,       -100 as l1 ,       1 as l2, 1 as l3, 1 as l4, 1 as l5   end catch",8617,8616,1,59,0,8617
"-- ============================================= -- Author:		<Author,,Name> -- Create date: <Create Date,,> -- Description:	<Description,,> -- ============================================= CREATE PROCEDURE [dbo].[unlock_data_emo_list_unlocked] AS DECLARE @Error INT; BEGIN 	update emo_list set EMO_STATUS8 = GETDATE() 	where EMO_STATUS8 is not null  	and EMO_STATUS9 is null  	and CASHED_PSTCDE_ID =0 and (EMO_RESERVER is null or EMO_RESERVER = 0)  	update emo_list set EMO_STATUS8 = GETDATE() 	where EMO_STATUS8 is not null  	and (EMO_STATUS8>EMO_STATUS9 )  	and CASHED_PSTCDE_ID =0 and (EMO_RESERVER is null or EMO_RESERVER = 0) END ",7077,42,7035,4808,42,21232
"-- ============================================= -- Author:		<Author,,Name> -- Create date: <Create Date,,> -- Description:	<Description,,> -- ============================================= CREATE PROCEDURE [dbo].[unlock_data_emo_list_unlocked] AS DECLARE @Error INT; BEGIN 	update emo_list set EMO_STATUS8 = GETDATE() 	where EMO_STATUS8 is not null  	and EMO_STATUS9 is null  	and CASHED_PSTCDE_ID =0 and (EMO_RESERVER is null or EMO_RESERVER = 0)  	update emo_list set EMO_STATUS8 = GETDATE() 	where EMO_STATUS8 is not null  	and (EMO_STATUS8>EMO_STATUS9 )  	and CASHED_PSTCDE_ID =0 and (EMO_RESERVER is null or EMO_RESERVER = 0) END ",2398,38,2360,4769,0,7196
"       SELECT       db_id() AS database_id,       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.is_filestream,       c.encryption_type,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END AS is_user,       COUNT_BIG(*) AS [ColCount],       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END AS collation_name,       AVG(c.max_length) AS avg_max_length       FROM sys.columns c WITH (NOLOCK)       LEFT OUTER JOIN sys.objects o WITH (NOLOCK)       ON o.object_id = c.object_id       AND o.type = 'U'       GROUP BY       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.encryption_type,       c.is_filestream,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END,       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END     ",1610,964,646,401,7,161040
"()                 begin try                 declare @enable int;                 select top 1 @enable = convert(int,value_in_use) from sys.configurations where name = 'default trace enabled'                 if @enable = 1 --default trace is enabled                 begin                 declare @curr_tracefilename varchar(500);                 declare @base_tracefilename varchar(500);                 declare @indx int ;                 declare @temp_trace table (                 StartTime datetime                 ,       EventSubClass int                 ,       IntegerData int                 );                 declare @path_separator CHAR(1) ;                 set @path_separator = ISNULL(CONVERT(CHAR(1), serverproperty('PathSeparator')), '\') ;                  select @curr_tracefilename = path from sys.traces where is_default = 1 ;                 set @curr_tracefilename = reverse(@curr_tracefilename)                 select @indx  = PATINDEX('%'+@path_separator+'%', @curr_tracefilename)                 set @curr_tracefilename = reverse(@curr_tracefilename)                 set @base_tracefilename = LEFT( @curr_tracefilename, len(@curr_tracefilename) - @indx) + @path_separator + 'log.trc';                  insert into @temp_trace                 select StartTime                 ,       EventSubClass                 ,       IntegerData                 from ::fn_trace_gettable( @base_tracefilename, default )                 where EventClass = 81;                  update @temp_trace set IntegerData = -IntegerData where EventSubClass = 2;                  select   1 as row_no                 ,       StartTime                 ,       EventSubClass                 ,       IntegerData                 ,       case when IntegerData < 0                 then -IntegerData                 else IntegerData                 end ""Absolute""                 from @temp_trace                 where (datediff(dd,StartTime,getdate()) < 7) order by StartTime ;                 end                 else                 begin                 select top 0 1 as row_no, 1 as StartTime , 1 as EventSubClass, 1 as IntegerData, 1 as Absolute                 end                 end try                 begin catch                 select  -100 as row_no                 ,       ERROR_NUMBER()  as StartTime                 ,       ERROR_SEVERITY() as EventSubClass                 ,       ERROR_STATE()  as   IntegerData                 ,       ERROR_MESSAGE() as Absolute                 end catch               ",523,522,1,0,0,1571
"       WITH CTE AS (       SELECT DISTINCT i.object_id oid, i.index_id iid       FROM sys.indexes i WITH(nolock)       JOIN sys.index_columns ic WITH(nolock) ON i.object_id = ic.object_id       JOIN sys.columns c WITH(nolock) ON ic.column_id = c.column_id AND c.object_id = i.object_id       WHERE c.system_type_id = 41 AND c.user_type_id = 41 -- only time columns       AND ic.key_ordinal != 0 -- only key columns       )       SELECT COUNT_BIG(*) AS [NumTimeIndices], db_id() AS database_id       FROM CTE     ",246,138,108,4903,0,24690
"declare @Path nvarchar(255) declare @Name nvarchar(255)   select @Path = N'G:\Backup_SQL\EMO\Transaction'   select @Name = null;           create table #filetmpfin (Name nvarchar(255) NOT NULL, IsFile bit NULL, FullName nvarchar(300) not NULL)         declare @FullName nvarchar(300)         declare @UseLegacyXPs bit = 1          if exists (select 1 from sys.all_objects where name = 'dm_os_enumerate_filesystem' and type = 'IF' and is_ms_shipped = 1)            select @UseLegacyXPs = IIF((LOWER(@Name) = N'nul') AND (exists (select 1 from sys.dm_os_host_info where host_platform = 'Windows')), 1, 0)          if @UseLegacyXPs = 0         begin            if (@Name is null)           begin                insert #filetmpfin select file_or_directory_name, 1 - is_directory, full_filesystem_path from sys.dm_os_enumerate_filesystem(@Path, '*') where [level] = 0           end            if (NOT @Name is null)           begin              if(@Path is null)                select @FullName = @Name             else               select @FullName = @Path 	+ convert(nvarchar(1), serverproperty('PathSeparator')) + @Name              create table #filetmp3 ( Exist bit NOT NULL, IsDir bit NOT NULL, DirExist bit NULL )              insert #filetmp3 select file_exists, file_is_a_directory, parent_directory_exists from sys.dm_os_file_exists(@FullName)              insert #filetmpfin select @Name, 1-IsDir, @FullName from #filetmp3 where Exist = 1 or IsDir = 1              drop table #filetmp3            end         end         else         begin           if(@Name is null)           begin             if (right(@Path, 1) = '\')               select @Path= substring(@Path, 1, len(@Path) - charindex('\', reverse(@Path)))             create table #filetmp (Name nvarchar(255) NOT NULL, depth int NOT NULL, IsFile bit NULL )             insert #filetmp EXECUTE master.dbo.xp_dirtree @Path, 1, 1             insert #filetmpfin select Name, IsFile, @Path + '\' + Name from #filetmp f             drop table #filetmp           end            if(NOT @Name is null)           begin             if(@Path is null)               select @FullName = @Name             else               select @FullName = @Path +  '\' + @Name             if (right(@FullName, 1) = '\')               select @Path= substring(@Path, 1, len(@FullName) - charindex('\', reverse(@FullName)))             create table #filetmp2 ( Exist bit NOT NULL, IsDir bit NOT NULL, DirExist bit NULL )             insert #filetmp2 EXECUTE master.dbo.xp_fileexist @FullName             insert #filetmpfin select @Name, 1-IsDir, @FullName from #filetmp2 where Exist = 1 or IsDir = 1              drop table #filetmp2           end          end           SELECT Name AS [Name], IsFile AS [IsFile], FullName AS [FullName] FROM #filetmpfin ORDER BY [IsFile] ASC,[Name] ASC drop table #filetmpfin ",244,74,170,5328,46,489
"SELECT     DB_NAME (database_id) as [Database Name],     name as [Database File Name],     [Type] = CASE WHEN Type_Desc = 'ROWS' THEN 'Data File(s)'             WHEN Type_Desc = 'LOG'  THEN 'Log File(s)'             ELSE Type_Desc END,     size*8/1024 as 'Size (MB)',     physical_name as [Database_File_Location] FROM sys.master_files ORDER BY 1,3  IF OBJECT_ID('tempdb.dbo.#space') IS NOT NULL     DROP TABLE #space  CREATE TABLE #space (       database_id INT PRIMARY KEY     , data_used_size DECIMAL(18,2)     , log_used_size DECIMAL(18,2) )  DECLARE @SQL NVARCHAR(MAX)  SELECT @SQL = STUFF((     SELECT '     USE [' + d.name + ']     INSERT INTO #space (database_id, data_used_size, log_used_size)     SELECT           DB_ID()         , SUM(CASE WHEN [type] = 0 THEN space_used END)         , SUM(CASE WHEN [type] = 1 THEN space_used END)     FROM (         SELECT s.[type], space_used = SUM(FILEPROPERTY(s.name, ''SpaceUsed'') * 8. / 1024)         FROM sys.database_files s         GROUP BY s.[type]     ) t;'     FROM sys.databases d     WHERE d.[state] = 0     FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 2, '')  EXEC sys.sp_executesql @SQL  SELECT       d.database_id     , d.name     , d.state_desc     , d.recovery_model_desc     , t.total_size     , t.data_size     , s.data_used_size     , t.log_size     , s.log_used_size     , bu.full_last_date     , bu.full_size     , bu.log_last_date     , bu.log_size FROM (     SELECT           database_id         , log_size = CAST(SUM(CASE WHEN [type] = 1 THEN size END) * 8. / 1024 AS DECIMAL(18,2))         , data_size = CAST(SUM(CASE WHEN [type] = 0 THEN size END) * 8. / 1024 AS DECIMAL(18,2))         , total_size = CAST(SUM(size) * 8. / 1024 AS DECIMAL(18,2))     FROM sys.master_files     GROUP BY database_id ) t JOIN sys.databases d ON d.database_id = t.database_id LEFT JOIN #space s ON d.database_id = s.database_id LEFT JOIN (     SELECT           database_name         , full_last_date = MAX(CASE WHEN [type] = 'D' THEN backup_finish_date END)         , full_size = MAX(CASE WHEN [type] = 'D' THEN backup_size END)         , log_last_date = MAX(CASE WHEN [type] = 'L' THEN backup_finish_date END)         , log_size = MAX(CASE WHEN [type] = 'L' THEN backup_size END)     FROM (         SELECT               s.database_name             , s.[type]             , s.backup_finish_date             , backup_size =                         CAST(CASE WHEN s.backup_size = s.compressed_backup_size                                     THEN s.backup_size                                     ELSE s.compressed_backup_size                         END / 1048576.0 AS DECIMAL(18,2))             , RowNum = ROW_NUMBER() OVER (PARTITION BY s.database_name, s.[type] ORDER BY s.backup_finish_date DESC)         FROM msdb.dbo.backupset s         WHERE s.[type] IN ('D', 'L')     ) f     WHERE f.RowNum = 1     GROUP BY f.database_name ) bu ON d.name = bu.database_name ORDER BY t.total_size DESC  SELECT      req.session_id     , req.total_elapsed_time AS duration_ms     , req.cpu_time AS cpu_time_ms     , req.total_elapsed_time - req.cpu_time AS wait_time     , req.logical_reads     , SUBSTRING (REPLACE (REPLACE (SUBSTRING (ST.text, (req.statement_start_offset/2) + 1,         ((CASE statement_end_offset            WHEN -1            THEN DATALENGTH(ST.text)              ELSE req.statement_end_offset          END - req.statement_start_offset)/2) + 1) , CHAR(10), ' '), CHAR(13), ' '),        1, 512)  AS statement_text   FROM sys.dm_exec_requests AS req     CROSS APPLY sys.dm_exec_sql_text(req.sql_handle) AS ST ORDER BY total_elapsed_time DESC;  SELECT top 100 t.text,      (qs.total_elapsed_time/1000) / qs.execution_count AS avg_elapsed_time,      (qs.total_worker_time/1000) / qs.execution_count AS avg_cpu_time,      ((qs.total_elapsed_time/1000) / qs.execution_count ) - ((qs.total_worker_time/1000) / qs.execution_count) AS avg_wait_time,      qs.total_logical_reads / qs.execution_count AS avg_logical_reads,      qs.total_logical_writes / qs.execution_count AS avg_writes,      (qs.total_elapsed_time/1000) AS cumulative_elapsed_time_all_executions FROM sys.dm_exec_query_stats qs      CROSS apply sys.Dm_exec_sql_text (sql_handle) t -- WHERE t.text like '<Your Query>%' -- Replace <Your Query> with your query or the beginning part of your query. The special chars like '[','_','%','^' in the query should be escaped. ORDER BY (qs.total_elapsed_time / qs.execution_count) DESC  --Deadlock sql check SELECT     session_id,     start_time,      [status],     command,     blocking_session_id,     wait_type,     wait_time,     open_transaction_count,     transaction_id,     total_elapsed_time,     Definition = CAST(text AS VARCHAR(MAX)) FROM     SYS.DM_EXEC_REQUESTS     CROSS APPLY sys.dm_exec_sql_text(sql_handle)  WHERE blocking_session_id != 0  SELECT sqlserver_start_time, (committed_kb/1024) AS Total_Server_Memory_MB, (committed_target_kb/1024)  AS Target_Server_Memory_MB FROM sys.dm_os_sys_info; ",241,55,186,18648,933,482
"       WITH CTE AS (       SELECT DISTINCT i.object_id oid, i.index_id iid       FROM sys.indexes i WITH(nolock)       JOIN sys.index_columns ic WITH(nolock) ON i.object_id = ic.object_id       JOIN sys.columns c WITH(nolock) ON ic.column_id = c.column_id AND c.object_id = i.object_id       WHERE c.system_type_id = 42 AND c.user_type_id = 42 -- only datetime2 columns       AND ic.key_ordinal != 0 -- only key columns       )       SELECT COUNT_BIG(*) AS [NumDatetime2Indices], db_id() AS database_id       FROM CTE     ",240,135,105,4952,0,24033
"       WITH CTE AS (       SELECT DISTINCT i.object_id oid, i.index_id iid       FROM sys.indexes i WITH(nolock)       JOIN sys.index_columns ic WITH(nolock) ON i.object_id = ic.object_id       JOIN sys.columns c WITH(nolock) ON ic.column_id = c.column_id AND c.object_id = i.object_id       WHERE c.system_type_id = 43 AND c.user_type_id = 43 -- only datetimeoffset columns       AND ic.key_ordinal != 0 -- only key columns       )       SELECT COUNT_BIG(*) AS [NumDatetimeoffsetCols], db_id() AS database_id       FROM CTE     ",240,136,104,4952,0,24021
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [emo] TO  DISK = N'G:\Backup_SQL\EMO\Full\emo\emo_backup_2024_04_16_230002_0541843.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_16_230002_0541843', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",204,103,101,151,0,204
"SELECT     DB_NAME (database_id) as [Database Name],     name as [Database File Name],     [Type] = CASE WHEN Type_Desc = 'ROWS' THEN 'Data File(s)'             WHEN Type_Desc = 'LOG'  THEN 'Log File(s)'             ELSE Type_Desc END,     size*8/1024 as 'Size (MB)',     physical_name as [Database_File_Location] FROM sys.master_files ORDER BY 1,3  IF OBJECT_ID('tempdb.dbo.#space') IS NOT NULL     DROP TABLE #space  CREATE TABLE #space (       database_id INT PRIMARY KEY     , data_used_size DECIMAL(18,2)     , log_used_size DECIMAL(18,2) )  DECLARE @SQL NVARCHAR(MAX)  SELECT @SQL = STUFF((     SELECT '     USE [' + d.name + ']     INSERT INTO #space (database_id, data_used_size, log_used_size)     SELECT           DB_ID()         , SUM(CASE WHEN [type] = 0 THEN space_used END)         , SUM(CASE WHEN [type] = 1 THEN space_used END)     FROM (         SELECT s.[type], space_used = SUM(FILEPROPERTY(s.name, ''SpaceUsed'') * 8. / 1024)         FROM sys.database_files s         GROUP BY s.[type]     ) t;'     FROM sys.databases d     WHERE d.[state] = 0     FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 2, '')  EXEC sys.sp_executesql @SQL  SELECT       d.database_id     , d.name     , d.state_desc     , d.recovery_model_desc     , t.total_size     , t.data_size     , s.data_used_size     , t.log_size     , s.log_used_size     , bu.full_last_date     , bu.full_size     , bu.log_last_date     , bu.log_size FROM (     SELECT           database_id         , log_size = CAST(SUM(CASE WHEN [type] = 1 THEN size END) * 8. / 1024 AS DECIMAL(18,2))         , data_size = CAST(SUM(CASE WHEN [type] = 0 THEN size END) * 8. / 1024 AS DECIMAL(18,2))         , total_size = CAST(SUM(size) * 8. / 1024 AS DECIMAL(18,2))     FROM sys.master_files     GROUP BY database_id ) t JOIN sys.databases d ON d.database_id = t.database_id LEFT JOIN #space s ON d.database_id = s.database_id LEFT JOIN (     SELECT           database_name         , full_last_date = MAX(CASE WHEN [type] = 'D' THEN backup_finish_date END)         , full_size = MAX(CASE WHEN [type] = 'D' THEN backup_size END)         , log_last_date = MAX(CASE WHEN [type] = 'L' THEN backup_finish_date END)         , log_size = MAX(CASE WHEN [type] = 'L' THEN backup_size END)     FROM (         SELECT               s.database_name             , s.[type]             , s.backup_finish_date             , backup_size =                         CAST(CASE WHEN s.backup_size = s.compressed_backup_size                                     THEN s.backup_size                                     ELSE s.compressed_backup_size                         END / 1048576.0 AS DECIMAL(18,2))             , RowNum = ROW_NUMBER() OVER (PARTITION BY s.database_name, s.[type] ORDER BY s.backup_finish_date DESC)         FROM msdb.dbo.backupset s         WHERE s.[type] IN ('D', 'L')     ) f     WHERE f.RowNum = 1     GROUP BY f.database_name ) bu ON d.name = bu.database_name ORDER BY t.total_size DESC  SELECT      req.session_id     , req.total_elapsed_time AS duration_ms     , req.cpu_time AS cpu_time_ms     , req.total_elapsed_time - req.cpu_time AS wait_time     , req.logical_reads     , SUBSTRING (REPLACE (REPLACE (SUBSTRING (ST.text, (req.statement_start_offset/2) + 1,         ((CASE statement_end_offset            WHEN -1            THEN DATALENGTH(ST.text)              ELSE req.statement_end_offset          END - req.statement_start_offset)/2) + 1) , CHAR(10), ' '), CHAR(13), ' '),        1, 512)  AS statement_text   FROM sys.dm_exec_requests AS req     CROSS APPLY sys.dm_exec_sql_text(req.sql_handle) AS ST ORDER BY total_elapsed_time DESC;  SELECT top 100 t.text,      (qs.total_elapsed_time/1000) / qs.execution_count AS avg_elapsed_time,      (qs.total_worker_time/1000) / qs.execution_count AS avg_cpu_time,      ((qs.total_elapsed_time/1000) / qs.execution_count ) - ((qs.total_worker_time/1000) / qs.execution_count) AS avg_wait_time,      qs.total_logical_reads / qs.execution_count AS avg_logical_reads,      qs.total_logical_writes / qs.execution_count AS avg_writes,      (qs.total_elapsed_time/1000) AS cumulative_elapsed_time_all_executions FROM sys.dm_exec_query_stats qs      CROSS apply sys.Dm_exec_sql_text (sql_handle) t -- WHERE t.text like '<Your Query>%' -- Replace <Your Query> with your query or the beginning part of your query. The special chars like '[','_','%','^' in the query should be escaped. ORDER BY (qs.total_elapsed_time / qs.execution_count) DESC  --Deadlock sql check SELECT     session_id,     start_time,      [status],     command,     blocking_session_id,     wait_type,     wait_time,     open_transaction_count,     transaction_id,     total_elapsed_time,     Definition = CAST(text AS VARCHAR(MAX)) FROM     SYS.DM_EXEC_REQUESTS     CROSS APPLY sys.dm_exec_sql_text(sql_handle)  WHERE blocking_session_id != 0   ",199,29,170,10067,589,398
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [emo] TO  DISK = N'G:\Backup_SQL\EMO\Full\emo\emo_backup_2024_04_18_230002_0364696.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_18_230002_0364696', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",199,75,124,151,0,199
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_03_29_150001_0455121.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_29_150001_0455121', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",191,157,34,236,0,191
"declare      @CPU_Usage_Percentage int,      @Total_SQL_Server_Memory_MB int   -- CPU WITH y AS (     SELECT               CONVERT(VARCHAR(5), 100 - ca.c.value('.', 'INT')) AS system_idle,         CONVERT(VARCHAR(30), rb.event_date) AS event_date,         CONVERT(VARCHAR(8000), rb.record) AS record     FROM (            SELECT              CONVERT(XML, dorb.record) AS record,             DATEADD(ms, ( ts.ms_ticks - dorb.timestamp ), GETDATE()) AS event_date         FROM   sys.dm_os_ring_buffers AS dorb             CROSS JOIN (                  SELECT                      dosi.ms_ticks                  FROM sys.dm_os_sys_info AS dosi ) AS ts                 WHERE   dorb.ring_buffer_type = N'RING_BUFFER_SCHEDULER_MONITOR'                         AND record LIKE '%%' ) AS rb             CROSS APPLY rb.record.nodes('/Record/SchedulerMonitorEvent/SystemHealth/SystemIdle') AS ca(c)         )     SELECT @CPU_Usage_Percentage = (select          TOP 1 y.system_idle     FROM y      ORDER BY y.event_date DESC)   -- memory select @Total_SQL_Server_Memory_MB = (select      cntr_value / 1024 from sys.dm_os_performance_counters pc where   [object_name] = 'SQLServer:Memory Manager'         and counter_name = 'Total Server Memory (KB)'                                                                                                         )   select      @CPU_Usage_Percentage           [CPU_Usage_Percentage],      @Total_SQL_Server_Memory_MB     [Total_SQL_Server_Memory_MB]; 	 WITH DB_CPU_Stats AS (SELECT pa.DatabaseID, DB_Name(pa.DatabaseID) AS [Database Name], SUM(qs.total_worker_time/1000) AS [CPU_Time_Ms]  FROM sys.dm_exec_query_stats AS qs WITH (NOLOCK)  CROSS APPLY (SELECT CONVERT(int, value) AS [DatabaseID]               FROM sys.dm_exec_plan_attributes(qs.plan_handle)               WHERE attribute = N'dbid') AS pa  GROUP BY DatabaseID) SELECT ROW_NUMBER() OVER(ORDER BY [CPU_Time_Ms] DESC) AS [CPU Rank],        [Database Name], [CPU_Time_Ms] AS [CPU Time (ms)],        CAST([CPU_Time_Ms] * 1.0 / SUM([CPU_Time_Ms]) OVER() * 100.0 AS DECIMAL(5, 2)) AS [CPU Percent] FROM DB_CPU_Stats WHERE DatabaseID <> 32767 -- ResourceDB ORDER BY [CPU Rank] OPTION (RECOMPILE);   DECLARE @total_buffer INT;  SELECT @total_buffer = cntr_value FROM sys.dm_os_performance_counters  WHERE RTRIM([object_name]) LIKE '%Buffer Manager' AND counter_name = 'Database Pages';  ;WITH src AS (   SELECT    database_id, db_buffer_pages = COUNT_BIG(*)   FROM sys.dm_os_buffer_descriptors   --WHERE database_id BETWEEN 5 AND 32766   GROUP BY database_id ) SELECT [db_name] = CASE [database_id] WHEN 32767  THEN 'Resource DB'  ELSE DB_NAME([database_id]) END, db_buffer_pages, db_buffer_MB = db_buffer_pages / 128, db_buffer_percent = CONVERT(DECIMAL(6,3),  db_buffer_pages * 100.0 / @total_buffer) FROM src ORDER BY db_buffer_MB DESC;  ",170,170,0,0,0,510
" DECLARE @total_buffer INT;  SELECT @total_buffer = cntr_value FROM sys.dm_os_performance_counters  WHERE RTRIM([object_name]) LIKE '%Buffer Manager' AND counter_name = 'Database Pages';  ;WITH src AS (   SELECT    database_id, db_buffer_pages = COUNT_BIG(*)   FROM sys.dm_os_buffer_descriptors   --WHERE database_id BETWEEN 5 AND 32766   GROUP BY database_id ) SELECT [db_name] = CASE [database_id] WHEN 32767  THEN 'Resource DB'  ELSE DB_NAME([database_id]) END, db_buffer_pages, db_buffer_MB = db_buffer_pages / 128, db_buffer_percent = CONVERT(DECIMAL(6,3),  db_buffer_pages * 100.0 / @total_buffer) FROM src ORDER BY db_buffer_MB DESC;  ",161,161,0,0,0,484
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_03_21_120002_1204588.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_21_120002_1204588', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",154,109,45,236,0,154
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [emo] TO  DISK = N'G:\Backup_SQL\EMO\Full\emo\emo_backup_2024_04_05_230001_5419151.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_05_230001_5419151', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",150,58,92,151,0,150
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_22_120001_1617359.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_22_120001_1617359', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",150,107,43,236,0,150
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [emo] TO  DISK = N'G:\Backup_SQL\EMO\Full\emo\emo_backup_2024_03_20_230002_0484644.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_20_230002_0484644', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",144,60,84,151,0,144
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_03_22_110001_7326620.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_22_110001_7326620', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",140,81,59,151,0,140
"-- ============================================= -- Author:		<Author,,Name> -- Create date: <Create Date,,> -- Description:	<Description,,> -- ============================================= CREATE PROCEDURE [dbo].[move_data_uncashed_18month]  	-- Add the parameters for the stored procedure here 	 AS DECLARE @Error INT; BEGIN 	 insert into emo_list_expired select *,'20' + convert(nvarchar(4),DATEADD(Month, -18, getdate()),12)  FROM EMO_LIST where cashed_pstcde_id = 0  and  convert(nvarchar(4),EMO_AUDIT_DTE_TME,12) = convert(nvarchar(4),DATEADD(Month, -18, getdate()),12)   delete FROM EMO_LIST where cashed_pstcde_id = 0  and  convert(nvarchar(4),EMO_AUDIT_DTE_TME,12) = convert(nvarchar(4),DATEADD(Month, -18, getdate()),12)   insert into emo_list_expired select *,'20' + convert(nvarchar(4),DATEADD(Month, -18, getdate()),12)  FROM CASHED_EMO_LIST where cashed_pstcde_id = 0  and  convert(nvarchar(4),EMO_AUDIT_DTE_TME,12) = convert(nvarchar(4),DATEADD(Month, -18, getdate()),12)   delete FROM CASHED_EMO_LIST where cashed_pstcde_id = 0  and  convert(nvarchar(4),EMO_AUDIT_DTE_TME,12) = convert(nvarchar(4),DATEADD(Month, -18, getdate()),12)   	 END ",136,95,41,23031,1933,409
"       SELECT       db_id() AS database_id,       o.[type] AS object_type,       i.[type] AS index_type,       p.[data_compression],       COUNT_BIG(DISTINCT p.[object_id]) AS NumTables,       COUNT_BIG(DISTINCT CAST(p.[object_id] AS VARCHAR(30)) + '|' + CAST(p.[index_id] AS VARCHAR(10))) AS NumIndexes,       ISNULL(px.[IsPartitioned], 0) AS IsPartitioned,       IIF(px.[IsPartitioned] = 1, COUNT_BIG(1), 0) NumPartitions,       SUM(p.[rows]) NumRows       FROM sys.partitions p       INNER JOIN sys.objects o       ON o.[object_id] = p.[object_id]       INNER JOIN sys.indexes i       ON i.[object_id] = p.[object_id]       AND i.[index_id] = p.[index_id]       OUTER APPLY (SELECT       x.[object_id], 1 AS [IsPartitioned]       FROM sys.partitions x       WHERE x.[object_id] = p.[object_id]       GROUP by       x.[object_id]       HAVING MAX(x.partition_number) > 1) px       WHERE o.[type] NOT IN ('S', 'IT')       GROUP BY       o.[type]       ,i.[type]       ,p.[data_compression]       ,px.[IsPartitioned]     ",135,86,49,5904,0,13522
"       WITH TablesAndViews AS       (SELECT object_id, 'table' AS object_type FROM sys.tables WITH(nolock) UNION ALL SELECT object_id, 'view' AS object_type FROM sys.views WITH(nolock))       SELECT       db_id() as database_id,       i.type,       i.is_unique,       i.is_primary_key,       i.is_unique_constraint,       i.is_disabled,       i.has_filter,       i.optimize_for_sequential_key,       COUNT_BIG(1) CountOfIndexes,       t.object_type       FROM sys.indexes i WITH(nolock)       INNER JOIN TablesAndViews t       ON t.object_id = i.object_id       GROUP BY i.type,       i.is_unique,       i.is_primary_key,       i.is_unique_constraint,       i.has_filter,       i.optimize_for_sequential_key,       t.object_type,       i.is_disabled     ",133,78,55,601,0,13344
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [emo] TO  DISK = N'G:\Backup_SQL\EMO\Full\emo\emo_backup_2024_03_29_230002_0788610.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_29_230002_0788610', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",126,54,72,151,0,126
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_03_25_150000_8813241.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_25_150000_8813241', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",125,86,39,236,0,125
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_16_210001_6410582.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_16_210001_6410582', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",117,77,40,236,0,117
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_20_230001_8513034.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_20_230001_8513034', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",117,58,59,151,0,117
"       SELECT       db_id() as database_id,       sm.[is_inlineable] AS InlineableScalarCount,​       sm.[inline_type] AS InlineType,​       COUNT_BIG(*) AS ScalarCount, ​       COUNT_BIG(CASE WHEN sm.[definition] LIKE '%getdate%' OR       sm.[definition] LIKE '%getutcdate%' OR ​       sm.[definition] LIKE '%sysdatetime%' OR​       sm.[definition] LIKE '%sysu​tcdatetime%' OR​       sm.[definition] LIKE '%sysdatetimeoffset%' OR​       sm.[definition] LIKE '%CURRENT_TIMESTAMP%'​       THEN 1       END) AS ScalarCountWithDate       FROM    [sys].[objects] o​       INNER JOIN    [sys].[sql_modules] sm       ON o.[object_id] = sm.[object_id]​       WHERE   o.[type] = 'FN'​       GROUP BY ​       sm.[is_inlineable],​       sm.[inline_type]     ",113,69,44,162,0,11353
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [emo] TO  DISK = N'G:\Backup_SQL\EMO\Full\emo\emo_backup_2024_03_26_230002_1232992.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_26_230002_1232992', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",110,51,59,151,0,110
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [emo] TO  DISK = N'G:\Backup_SQL\EMO\Full\emo\emo_backup_2024_04_14_230002_1034388.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_14_230002_1034388', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",105,55,50,152,0,105
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_18_020001_1303751.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_18_020001_1303751', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",105,73,32,151,0,105
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_10_120000_8980666.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_10_120000_8980666', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",104,72,32,236,0,104
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_11_120001_1747426.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_11_120001_1747426', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",101,77,24,236,0,101
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_11_210000_8664770.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_11_210000_8664770', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",100,75,25,236,0,100
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_15_230001_9029477.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_15_230001_9029477', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",100,70,30,151,0,100
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_03_30_180001_6429296.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_30_180001_6429296', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",98,66,32,236,0,98
"       SELECT db_id() AS database_id, COUNT_BIG(*) AS [TVPStoredProcsCount]       FROM sys.types t WITH(nolock)       JOIN sys.parameters p WITH(nolock) ON t.system_type_id = p.system_type_id AND t.user_type_id=p.user_type_id       JOIN sys.objects o WITH(nolock) ON o.object_id = p.object_id       WHERE is_table_type = 1     ",94,53,41,192,0,9483
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_20_170001_3745936.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_20_170001_3745936', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",94,63,31,151,0,94
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_13_110000_9435316.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_13_110000_9435316', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",92,56,36,151,0,92
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_02_110001_6422953.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_02_110001_6422953', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",92,49,43,151,0,92
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [emo] TO  DISK = N'G:\Backup_SQL\EMO\Full\emo\emo_backup_2024_04_13_230002_4118642.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_13_230002_4118642', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",91,51,40,151,0,91
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_19_200000_8709809.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_19_200000_8709809', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",88,55,33,151,0,88
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_11_140001_0520429.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_11_140001_0520429', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",85,50,35,151,0,85
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_13_200000_9721021.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_13_200000_9721021', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",85,57,28,151,0,85
"       SELECT DB_ID() AS database_id, COUNT_BIG(DISTINCT ic.object_id) as table_count       FROM  sys.index_columns ic WITH(nolock)       INNER JOIN sys.columns col WITH(nolock) ON ic.object_id = col.object_id and ic.column_id = col.column_id       WHERE col.system_type_id = 241     ",85,46,39,994,0,8554
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_21_230001_5536512.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_21_230001_5536512', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",85,51,34,151,0,85
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [emo] TO  DISK = N'G:\Backup_SQL\EMO\Full\emo\emo_backup_2024_04_21_230001_5776124.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_21_230001_5776124', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",85,49,36,151,0,85
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_03_20_170000_9985437.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_20_170000_9985437', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",84,51,33,151,0,84
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_09_120000_9497267.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_09_120000_9497267', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",84,76,8,236,0,84
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_14_180001_0922549.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_14_180001_0922549', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",83,64,19,236,0,83
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [emo] TO  DISK = N'G:\Backup_SQL\EMO\Full\emo\emo_backup_2024_04_06_230001_8712230.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_06_230001_8712230', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",81,58,23,151,0,81
"(@_msparam_0 nvarchar(4000))       select * into #tmpag_availability_groups from master.sys.availability_groups        SELECT arcn.replica_server_name AS [ReplicaName], cm.member_name AS [NodeName], cm.member_type AS [MemberType], cm.member_state AS [MemberState], ISNULL(cm.number_of_quorum_votes, -1) AS [NumberOfQuorumVotes], 'Server[@Name=' + quotename(CAST(         serverproperty(N'Servername')        AS sysname),'''') + ']' + '/AvailabilityGroup[@Name=' + quotename(AG.name,'''') + ']' + '/ReplicaClusterNode[@ReplicaName=' + quotename(arcn.replica_server_name,'''') + ' and @NodeName=' + quotename(cm.member_name,'''') + ']' AS [Urn] FROM #tmpag_availability_groups AS AG INNER JOIN master.sys.dm_hadr_availability_replica_cluster_nodes AS arcn ON arcn.group_name=AG.name LEFT OUTER JOIN master.sys.dm_hadr_cluster_members AS cm ON UPPER(arcn.node_name) = UPPER(cm.member_name) WHERE (AG.name=@_msparam_0)        drop table #tmpag_availability_groups       ",81,66,15,5,0,81
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_07_160000_8545422.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_07_160000_8545422', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",81,51,30,151,0,81
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_10_150001_3213125.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_10_150001_3213125', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",78,65,13,236,0,78
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_23_190000_8557873.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_23_190000_8557873', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",77,51,26,151,0,77
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [emo] TO  DISK = N'G:\Backup_SQL\EMO\Full\emo\emo_backup_2024_04_15_230002_0576993.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_15_230002_0576993', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",77,43,34,151,0,77
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_22_030000_8658586.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_22_030000_8658586', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",76,66,10,236,0,76
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_03_31_000001_1253699.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_31_000001_1253699', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",76,61,15,236,0,76
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_03_26_230001_8637244.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_26_230001_8637244', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",75,49,26,151,0,75
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_02_230001_5738359.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_02_230001_5738359', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",74,50,24,151,0,74
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_14_090000_9311716.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_14_090000_9311716', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",73,66,7,236,0,73
"(@_msparam_0 nvarchar(4000),@_msparam_1 nvarchar(4000))SELECT 'XEStore[@Name=' + quotename(CAST(SERVERPROPERTY(N'ServerName') AS sysname),'''') + ']' + '/Session[@Name=' + quotename(session.name,'''') + ']' + '/Event[@Name=' + quotename(event.package + '.' + event.name,'''') + ']' AS [Urn], event.event_id AS [ID], event.package + '.' + event.name AS [Name], event.module AS [ModuleID], event.package AS [PackageName], event.predicate AS [PredicateExpression], event.predicate_xml AS [PredicateXml], object2.description AS [Description] FROM sys.server_event_sessions AS session LEFT OUTER JOIN sys.dm_xe_sessions AS running ON running.name = session.name, sys.server_event_session_events AS event INNER JOIN sys.dm_xe_objects AS object2 ON event.name = object2.name AND object2.object_type='event' INNER JOIN sys.dm_xe_packages AS package2 ON event.module = package2.module_guid AND event.package = package2.name AND package2.guid = object2.package_guid WHERE (session.event_session_id = event.event_session_id)and((session.name=@_msparam_0)and((CAST(SERVERPROPERTY(N'ServerName') AS sysname)=@_msparam_1)))",73,73,0,182,0,73
"(@_msparam_0 nvarchar(4000),@_msparam_1 nvarchar(4000),@_msparam_2 nvarchar(4000))SELECT SCHEMA_NAME(sp.schema_id) AS [Schema], sp.name AS [Name], sp.object_id AS [ID], CAST(  case      when sp.is_ms_shipped = 1 then 1     when (         select              major_id          from              sys.extended_properties          where              major_id = sp.object_id and              minor_id = 0 and              class = 1 and              name = N'microsoft_database_tools_support')          is not null then 1     else 0 end                        AS bit) AS [IsSystemObject], CASE WHEN sp.type = N'P' THEN 1 WHEN sp.type = N'PC' THEN 2 ELSE 1 END AS [ImplementationType], CAST(CASE WHEN ISNULL(smsp.definition, ssmsp.definition) IS NULL THEN 1 ELSE 0 END AS bit) AS [IsEncrypted] FROM sys.all_objects AS sp LEFT OUTER JOIN sys.sql_modules AS smsp ON smsp.object_id = sp.object_id LEFT OUTER JOIN sys.system_sql_modules AS ssmsp ON ssmsp.object_id = sp.object_id WHERE (sp.type = @_msparam_0 OR sp.type = @_msparam_1 OR sp.type=@_msparam_2) ORDER BY [Schema] ASC,[Name] ASC",72,60,12,86540,0,510
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_03_20_120000_9164174.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_20_120000_9164174', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",72,59,13,236,0,72
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [emo] TO  DISK = N'G:\Backup_SQL\EMO\Full\emo\emo_backup_2024_04_19_230002_0446008.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_19_230002_0446008', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",72,53,19,151,0,72
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_08_210001_0591099.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_08_210001_0591099', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",72,58,14,236,0,72
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_07_180001_0326674.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_07_180001_0326674', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",71,61,10,236,0,71
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_13_130000_8265810.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_13_130000_8265810', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",71,50,21,151,0,71
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_16_020001_1860433.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_16_020001_1860433', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",71,49,22,151,0,71
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [emo] TO  DISK = N'G:\Backup_SQL\EMO\Full\emo\emo_backup_2024_04_12_230001_2084087.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_12_230001_2084087', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",70,45,25,151,0,70
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_18_090001_0046049.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_18_090001_0046049', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",70,58,12,236,0,70
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_17_230001_9654318.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_17_230001_9654318', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",70,54,16,151,0,70
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_04_120001_3431955.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_04_120001_3431955', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",70,68,2,272,0,70
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_03_30_210000_9997273.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_30_210000_9997273', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",69,59,10,236,0,69
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_11_180000_9161769.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_11_180000_9161769', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",69,65,4,236,0,69
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_20_090000_9161126.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_20_090000_9161126', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",67,62,5,236,0,67
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_18_110000_8752714.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_18_110000_8752714', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",66,55,11,151,0,66
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_06_180000_8942346.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_06_180000_8942346', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",66,62,4,236,0,66
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_06_030000_9413638.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_06_030000_9413638', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",66,60,6,236,0,66
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_03_21_020001_4032187.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_21_020001_4032187', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",66,52,14,151,0,66
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_12_210000_8660100.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_12_210000_8660100', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",66,62,4,236,0,66
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_16_000001_0419209.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_16_000001_0419209', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",66,64,2,236,0,66
" 	SELECT 	CASE 		WHEN name like  '%msdtcprx.dll%' THEN 'msdtcprx' 		WHEN name like  '%sqljdbc_xa.dll%' THEN 'sqljdbc_xa' 		ELSE NULL 	END AS LoadedModules, 	COUNT(1) AS ModuleCount         FROM sys.dm_os_loaded_modules WITH (NOLOCK)         WHERE name like  '%msdtcprx.dll%' 	OR name like  '%sqljdbc_xa.dll%'         GROUP BY 	CASE WHEN name like  '%msdtcprx.dll%' THEN 'msdtcprx' 		WHEN name like  '%sqljdbc_xa.dll%' THEN 'sqljdbc_xa' 		ELSE NULL 	END;     ",66,66,0,0,0,6744
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_21_030001_0704781.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_21_030001_0704781', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",65,61,4,236,0,65
" CREATE   PROCEDURE autoadmin_fetch_system_flags AS BEGIN 	BEGIN TRANSACTION 		DECLARE @value NVARCHAR(MAX)  		SELECT @value = value FROM autoadmin_system_flags WHERE LOWER(name) = LOWER(N'SSMBackup2WAEverConfigured') 		 		IF (LOWER(ISNULL(@value, '')) <> N'true') 		BEGIN 			DECLARE @is_configured BIT 			SET @is_configured = 0 			 			IF EXISTS (SELECT TOP 1 container_url FROM managed_backup.fn_backup_db_config(NULL) WHERE container_url IS NOT NULL) 			BEGIN 				SET @is_configured = 1	 			END 			ELSE IF EXISTS (SELECT TOP 1 container_url FROM managed_backup.fn_backup_instance_config() WHERE container_url IS NOT NULL) 			BEGIN 				SET @is_configured = 1	 			END 			ELSE IF EXISTS (SELECT TOP 1 credential_name FROM smart_admin.fn_backup_db_config(NULL) WHERE credential_name IS NOT NULL) 			BEGIN 				SET @is_configured = 1	 			END 			ELSE IF EXISTS (SELECT TOP 1 credential_name FROM smart_admin.fn_backup_instance_config() WHERE credential_name IS NOT NULL) 			BEGIN 				SET @is_configured = 1	 			END 			 			IF (@is_configured = 1) 			BEGIN 				MERGE autoadmin_system_flags AS target 				USING (SELECT LOWER(N'SSMBackup2WAEverConfigured') as name) AS source 				ON source.name = target.name 				WHEN MATCHED THEN UPDATE SET target.value = N'true' 				WHEN NOT MATCHED THEN INSERT VALUES (N'SSMBackup2WAEverConfigured', N'true'); 			END 		END 	COMMIT TRANSACTION 	     SELECT name, 	value  	FROM autoadmin_system_flags END ",65,65,0,591,5,65
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_18_000001_0357856.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_18_000001_0357856', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",65,63,2,236,0,65
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_14_020001_4137324.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_14_020001_4137324', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",65,56,9,151,0,65
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_03_19_230001_2455071.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_19_230001_2455071', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",65,59,6,236,0,65
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_03_090000_7940216.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_03_090000_7940216', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",65,59,6,236,0,65
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_03_23_060001_1012906.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_23_060001_1012906', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",65,58,7,236,0,65
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_17_120001_4652776.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_17_120001_4652776', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",64,61,3,236,0,64
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_14_200000_8901164.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_14_200000_8901164', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",64,46,18,151,0,64
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [emo] TO  DISK = N'G:\Backup_SQL\EMO\Full\emo\emo_backup_2024_04_11_230001_2578452.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_11_230001_2578452', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",63,54,9,151,0,63
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_03_24_150001_2131520.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_24_150001_2131520', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",63,61,2,236,0,63
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_14_110000_8474110.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_14_110000_8474110', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",63,46,17,151,0,63
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_07_030001_0659460.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_07_030001_0659460', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",63,60,3,236,0,63
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_04_20_160000_9294085.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_04_20_160000_9294085', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",63,45,18,151,0,63
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('emo'))  IF (@preferredReplica = 1) BEGIN     BACKUP LOG [emo] TO  DISK = N'G:\Backup_SQL\EMO\Transaction\emo\emo_backup_2024_03_29_140001_4885329.trn' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'emo_backup_2024_03_29_140001_4885329', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",63,44,19,151,0,63

"()                 begin try                 declare @enable int;                 select top 1 @enable = convert(int,value_in_use) from sys.configurations where name = 'default trace enabled'                 if @enable = 1 --default trace is enabled                 begin                 declare @curr_tracefilename varchar(500);                 declare @base_tracefilename varchar(500);                 declare @indx int ;                 declare @temp_trace table (                 StartTime datetime                 ,       EventSubClass int                 ,       IntegerData int                 );                 declare @path_separator CHAR(1) ;                 set @path_separator = ISNULL(CONVERT(CHAR(1), serverproperty('PathSeparator')), '\') ;                  select @curr_tracefilename = path from sys.traces where is_default = 1 ;                 set @curr_tracefilename = reverse(@curr_tracefilename)                 select @indx  = PATINDEX('%'+@path_separator+'%', @curr_tracefilename)                 set @curr_tracefilename = reverse(@curr_tracefilename)                 set @base_tracefilename = LEFT( @curr_tracefilename, len(@curr_tracefilename) - @indx) + @path_separator + 'log.trc';                  insert into @temp_trace                 select StartTime                 ,       EventSubClass                 ,       IntegerData                 from ::fn_trace_gettable( @base_tracefilename, default )                 where EventClass = 81;                  update @temp_trace set IntegerData = -IntegerData where EventSubClass = 2;                  select   1 as row_no                 ,       StartTime                 ,       EventSubClass                 ,       IntegerData                 ,       case when IntegerData < 0                 then -IntegerData                 else IntegerData                 end ""Absolute""                 from @temp_trace                 where (datediff(dd,StartTime,getdate()) < 7) order by StartTime ;                 end                 else                 begin                 select top 0 1 as row_no, 1 as StartTime , 1 as EventSubClass, 1 as IntegerData, 1 as Absolute                 end                 end try                 begin catch                 select  -100 as row_no                 ,       ERROR_NUMBER()  as StartTime                 ,       ERROR_SEVERITY() as EventSubClass                 ,       ERROR_STATE()  as   IntegerData                 ,       ERROR_MESSAGE() as Absolute                 end catch               ",2072,2069,3,0,0,4145
"       SELECT       db_id() AS database_id,       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.is_filestream,       c.encryption_type,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END AS is_user,       COUNT_BIG(*) AS [ColCount],       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END AS collation_name,       AVG(c.max_length) AS avg_max_length       FROM sys.columns c WITH (NOLOCK)       LEFT OUTER JOIN sys.objects o WITH (NOLOCK)       ON o.object_id = c.object_id       AND o.type = 'U'       GROUP BY       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.encryption_type,       c.is_filestream,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END,       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END     ",636,379,257,440,0,26090
"       SELECT       db_id() AS database_id,       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.is_filestream,       c.encryption_type,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END AS is_user,       COUNT_BIG(*) AS [ColCount],       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END AS collation_name,       AVG(c.max_length) AS avg_max_length       FROM sys.columns c WITH (NOLOCK)       LEFT OUTER JOIN sys.objects o WITH (NOLOCK)       ON o.object_id = c.object_id       AND o.type = 'U'       GROUP BY       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.encryption_type,       c.is_filestream,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END,       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END     ",579,349,230,436,0,23756
"       SELECT       db_id() AS database_id,       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.is_filestream,       c.encryption_type,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END AS is_user,       COUNT_BIG(*) AS [ColCount],       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END AS collation_name,       AVG(c.max_length) AS avg_max_length       FROM sys.columns c WITH (NOLOCK)       LEFT OUTER JOIN sys.objects o WITH (NOLOCK)       ON o.object_id = c.object_id       AND o.type = 'U'       GROUP BY       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.encryption_type,       c.is_filestream,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END,       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END     ",562,341,221,438,0,23045
"SELECT     DB_NAME (database_id) as [Database Name],     name as [Database File Name],     [Type] = CASE WHEN Type_Desc = 'ROWS' THEN 'Data File(s)'             WHEN Type_Desc = 'LOG'  THEN 'Log File(s)'             ELSE Type_Desc END,     size*8/1024 as 'Size (MB)',     physical_name as [Database_File_Location] FROM sys.master_files ORDER BY 1,3  IF OBJECT_ID('tempdb.dbo.#space') IS NOT NULL     DROP TABLE #space  CREATE TABLE #space (       database_id INT PRIMARY KEY     , data_used_size DECIMAL(18,2)     , log_used_size DECIMAL(18,2) )  DECLARE @SQL NVARCHAR(MAX)  SELECT @SQL = STUFF((     SELECT '     USE [' + d.name + ']     INSERT INTO #space (database_id, data_used_size, log_used_size)     SELECT           DB_ID()         , SUM(CASE WHEN [type] = 0 THEN space_used END)         , SUM(CASE WHEN [type] = 1 THEN space_used END)     FROM (         SELECT s.[type], space_used = SUM(FILEPROPERTY(s.name, ''SpaceUsed'') * 8. / 1024)         FROM sys.database_files s         GROUP BY s.[type]     ) t;'     FROM sys.databases d     WHERE d.[state] = 0     FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 2, '')  EXEC sys.sp_executesql @SQL  SELECT       d.database_id     , d.name     , d.state_desc     , d.recovery_model_desc     , t.total_size     , t.data_size     , s.data_used_size     , t.log_size     , s.log_used_size     , bu.full_last_date     , bu.full_size     , bu.log_last_date     , bu.log_size FROM (     SELECT           database_id         , log_size = CAST(SUM(CASE WHEN [type] = 1 THEN size END) * 8. / 1024 AS DECIMAL(18,2))         , data_size = CAST(SUM(CASE WHEN [type] = 0 THEN size END) * 8. / 1024 AS DECIMAL(18,2))         , total_size = CAST(SUM(size) * 8. / 1024 AS DECIMAL(18,2))     FROM sys.master_files     GROUP BY database_id ) t JOIN sys.databases d ON d.database_id = t.database_id LEFT JOIN #space s ON d.database_id = s.database_id LEFT JOIN (     SELECT           database_name         , full_last_date = MAX(CASE WHEN [type] = 'D' THEN backup_finish_date END)         , full_size = MAX(CASE WHEN [type] = 'D' THEN backup_size END)         , log_last_date = MAX(CASE WHEN [type] = 'L' THEN backup_finish_date END)         , log_size = MAX(CASE WHEN [type] = 'L' THEN backup_size END)     FROM (         SELECT               s.database_name             , s.[type]             , s.backup_finish_date             , backup_size =                         CAST(CASE WHEN s.backup_size = s.compressed_backup_size                                     THEN s.backup_size                                     ELSE s.compressed_backup_size                         END / 1048576.0 AS DECIMAL(18,2))             , RowNum = ROW_NUMBER() OVER (PARTITION BY s.database_name, s.[type] ORDER BY s.backup_finish_date DESC)         FROM msdb.dbo.backupset s         WHERE s.[type] IN ('D', 'L')     ) f     WHERE f.RowNum = 1     GROUP BY f.database_name ) bu ON d.name = bu.database_name ORDER BY t.total_size DESC  SELECT      req.session_id     , req.total_elapsed_time AS duration_ms     , req.cpu_time AS cpu_time_ms     , req.total_elapsed_time - req.cpu_time AS wait_time     , req.logical_reads     , SUBSTRING (REPLACE (REPLACE (SUBSTRING (ST.text, (req.statement_start_offset/2) + 1,         ((CASE statement_end_offset            WHEN -1            THEN DATALENGTH(ST.text)              ELSE req.statement_end_offset          END - req.statement_start_offset)/2) + 1) , CHAR(10), ' '), CHAR(13), ' '),        1, 512)  AS statement_text   FROM sys.dm_exec_requests AS req     CROSS APPLY sys.dm_exec_sql_text(req.sql_handle) AS ST ORDER BY total_elapsed_time DESC;  SELECT top 100 t.text,      (qs.total_elapsed_time/1000) / qs.execution_count AS avg_elapsed_time,      (qs.total_worker_time/1000) / qs.execution_count AS avg_cpu_time,      ((qs.total_elapsed_time/1000) / qs.execution_count ) - ((qs.total_worker_time/1000) / qs.execution_count) AS avg_wait_time,      qs.total_logical_reads / qs.execution_count AS avg_logical_reads,      qs.total_logical_writes / qs.execution_count AS avg_writes,      (qs.total_elapsed_time/1000) AS cumulative_elapsed_time_all_executions FROM sys.dm_exec_query_stats qs      CROSS apply sys.Dm_exec_sql_text (sql_handle) t -- WHERE t.text like '<Your Query>%' -- Replace <Your Query> with your query or the beginning part of your query. The special chars like '[','_','%','^' in the query should be escaped. ORDER BY (qs.total_elapsed_time / qs.execution_count) DESC  --Deadlock sql check SELECT     session_id,     start_time,      [status],     command,     blocking_session_id,     wait_type,     wait_time,     open_transaction_count,     transaction_id,     total_elapsed_time,     Definition = CAST(text AS VARCHAR(MAX)) FROM     SYS.DM_EXEC_REQUESTS     CROSS APPLY sys.dm_exec_sql_text(sql_handle)  WHERE blocking_session_id != 0   ",559,360,199,15655,0,559
"       SELECT       db_id() AS database_id,       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.is_filestream,       c.encryption_type,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END AS is_user,       COUNT_BIG(*) AS [ColCount],       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END AS collation_name,       AVG(c.max_length) AS avg_max_length       FROM sys.columns c WITH (NOLOCK)       LEFT OUTER JOIN sys.objects o WITH (NOLOCK)       ON o.object_id = c.object_id       AND o.type = 'U'       GROUP BY       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.encryption_type,       c.is_filestream,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END,       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END     ",558,335,223,437,0,22898
"       SELECT       db_id() AS database_id,       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.is_filestream,       c.encryption_type,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END AS is_user,       COUNT_BIG(*) AS [ColCount],       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END AS collation_name,       AVG(c.max_length) AS avg_max_length       FROM sys.columns c WITH (NOLOCK)       LEFT OUTER JOIN sys.objects o WITH (NOLOCK)       ON o.object_id = c.object_id       AND o.type = 'U'       GROUP BY       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.encryption_type,       c.is_filestream,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END,       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END     ",528,322,206,415,0,21680
"       SELECT       db_id() AS database_id,       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.is_filestream,       c.encryption_type,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END AS is_user,       COUNT_BIG(*) AS [ColCount],       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END AS collation_name,       AVG(c.max_length) AS avg_max_length       FROM sys.columns c WITH (NOLOCK)       LEFT OUTER JOIN sys.objects o WITH (NOLOCK)       ON o.object_id = c.object_id       AND o.type = 'U'       GROUP BY       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.encryption_type,       c.is_filestream,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END,       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END     ",527,322,205,409,0,21619
"       SELECT       db_id() AS database_id,       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.is_filestream,       c.encryption_type,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END AS is_user,       COUNT_BIG(*) AS [ColCount],       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END AS collation_name,       AVG(c.max_length) AS avg_max_length       FROM sys.columns c WITH (NOLOCK)       LEFT OUTER JOIN sys.objects o WITH (NOLOCK)       ON o.object_id = c.object_id       AND o.type = 'U'       GROUP BY       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.encryption_type,       c.is_filestream,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END,       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END     ",525,317,208,436,0,21529
"       SELECT       db_id() AS database_id,       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.is_filestream,       c.encryption_type,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END AS is_user,       COUNT_BIG(*) AS [ColCount],       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END AS collation_name,       AVG(c.max_length) AS avg_max_length       FROM sys.columns c WITH (NOLOCK)       LEFT OUTER JOIN sys.objects o WITH (NOLOCK)       ON o.object_id = c.object_id       AND o.type = 'U'       GROUP BY       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.encryption_type,       c.is_filestream,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END,       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END     ",520,317,203,408,0,21338
"       SELECT       db_id() AS database_id,       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.is_filestream,       c.encryption_type,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END AS is_user,       COUNT_BIG(*) AS [ColCount],       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END AS collation_name,       AVG(c.max_length) AS avg_max_length       FROM sys.columns c WITH (NOLOCK)       LEFT OUTER JOIN sys.objects o WITH (NOLOCK)       ON o.object_id = c.object_id       AND o.type = 'U'       GROUP BY       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.encryption_type,       c.is_filestream,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END,       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END     ",332,200,132,291,0,20918
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_04_05_230002_0181594.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_04_05_230002_0181594', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",321,137,184,236,0,321
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('THPOST_SEARCH'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [THPOST_SEARCH] TO  DISK = N'G:\Backup_SQL\KPI\Full\THPOST_SEARCH\THPOST_SEARCH_backup_2024_04_16_230002_2199215.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'THPOST_SEARCH_backup_2024_04_16_230002_2199215', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",314,118,196,148,0,314
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_03_31_230001_9023154.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_03_31_230001_9023154', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",299,134,165,236,0,299
"       SELECT       db_id() as database_id,       sm.[is_inlineable] AS InlineableScalarCount,​       sm.[inline_type] AS InlineType,​       COUNT_BIG(*) AS ScalarCount, ​       COUNT_BIG(CASE WHEN sm.[definition] LIKE '%getdate%' OR       sm.[definition] LIKE '%getutcdate%' OR ​       sm.[definition] LIKE '%sysdatetime%' OR​       sm.[definition] LIKE '%sysu​tcdatetime%' OR​       sm.[definition] LIKE '%sysdatetimeoffset%' OR​       sm.[definition] LIKE '%CURRENT_TIMESTAMP%'​       THEN 1       END) AS ScalarCountWithDate       FROM    [sys].[objects] o​       INNER JOIN    [sys].[sql_modules] sm       ON o.[object_id] = sm.[object_id]​       WHERE   o.[type] = 'FN'​       GROUP BY ​       sm.[is_inlineable],​       sm.[inline_type]     ",282,176,106,858,0,11590
"       SELECT       db_id() as database_id,       sm.[is_inlineable] AS InlineableScalarCount,​       sm.[inline_type] AS InlineType,​       COUNT_BIG(*) AS ScalarCount, ​       COUNT_BIG(CASE WHEN sm.[definition] LIKE '%getdate%' OR       sm.[definition] LIKE '%getutcdate%' OR ​       sm.[definition] LIKE '%sysdatetime%' OR​       sm.[definition] LIKE '%sysu​tcdatetime%' OR​       sm.[definition] LIKE '%sysdatetimeoffset%' OR​       sm.[definition] LIKE '%CURRENT_TIMESTAMP%'​       THEN 1       END) AS ScalarCountWithDate       FROM    [sys].[objects] o​       INNER JOIN    [sys].[sql_modules] sm       ON o.[object_id] = sm.[object_id]​       WHERE   o.[type] = 'FN'​       GROUP BY ​       sm.[is_inlineable],​       sm.[inline_type]     ",280,174,106,858,0,11487
"       SELECT       db_id() as database_id,       sm.[is_inlineable] AS InlineableScalarCount,​       sm.[inline_type] AS InlineType,​       COUNT_BIG(*) AS ScalarCount, ​       COUNT_BIG(CASE WHEN sm.[definition] LIKE '%getdate%' OR       sm.[definition] LIKE '%getutcdate%' OR ​       sm.[definition] LIKE '%sysdatetime%' OR​       sm.[definition] LIKE '%sysu​tcdatetime%' OR​       sm.[definition] LIKE '%sysdatetimeoffset%' OR​       sm.[definition] LIKE '%CURRENT_TIMESTAMP%'​       THEN 1       END) AS ScalarCountWithDate       FROM    [sys].[objects] o​       INNER JOIN    [sys].[sql_modules] sm       ON o.[object_id] = sm.[object_id]​       WHERE   o.[type] = 'FN'​       GROUP BY ​       sm.[is_inlineable],​       sm.[inline_type]     ",278,175,103,858,0,11436
"       SELECT       db_id() AS database_id,       o.[type] AS object_type,       i.[type] AS index_type,       p.[data_compression],       COUNT_BIG(DISTINCT p.[object_id]) AS NumTables,       COUNT_BIG(DISTINCT CAST(p.[object_id] AS VARCHAR(30)) + '|' + CAST(p.[index_id] AS VARCHAR(10))) AS NumIndexes,       ISNULL(px.[IsPartitioned], 0) AS IsPartitioned,       IIF(px.[IsPartitioned] = 1, COUNT_BIG(1), 0) NumPartitions,       SUM(p.[rows]) NumRows       FROM sys.partitions p       INNER JOIN sys.objects o       ON o.[object_id] = p.[object_id]       INNER JOIN sys.indexes i       ON i.[object_id] = p.[object_id]       AND i.[index_id] = p.[index_id]       OUTER APPLY (SELECT       x.[object_id], 1 AS [IsPartitioned]       FROM sys.partitions x       WHERE x.[object_id] = p.[object_id]       GROUP by       x.[object_id]       HAVING MAX(x.partition_number) > 1) px       WHERE o.[type] NOT IN ('S', 'IT')       GROUP BY       o.[type]       ,i.[type]       ,p.[data_compression]       ,px.[IsPartitioned]     ",277,168,109,4701,0,11360
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE63'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE63] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE63\PERFORMANCE63_backup_2024_03_31_230002_0151316.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE63_backup_2024_03_31_230002_0151316', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",276,123,153,151,0,276
"       SELECT       db_id() AS database_id,       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.is_filestream,       c.encryption_type,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END AS is_user,       COUNT_BIG(*) AS [ColCount],       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END AS collation_name,       AVG(c.max_length) AS avg_max_length       FROM sys.columns c WITH (NOLOCK)       LEFT OUTER JOIN sys.objects o WITH (NOLOCK)       ON o.object_id = c.object_id       AND o.type = 'U'       GROUP BY       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.encryption_type,       c.is_filestream,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END,       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END     ",276,166,110,285,0,11323
"       SELECT       db_id() as database_id,       sm.[is_inlineable] AS InlineableScalarCount,​       sm.[inline_type] AS InlineType,​       COUNT_BIG(*) AS ScalarCount, ​       COUNT_BIG(CASE WHEN sm.[definition] LIKE '%getdate%' OR       sm.[definition] LIKE '%getutcdate%' OR ​       sm.[definition] LIKE '%sysdatetime%' OR​       sm.[definition] LIKE '%sysu​tcdatetime%' OR​       sm.[definition] LIKE '%sysdatetimeoffset%' OR​       sm.[definition] LIKE '%CURRENT_TIMESTAMP%'​       THEN 1       END) AS ScalarCountWithDate       FROM    [sys].[objects] o​       INNER JOIN    [sys].[sql_modules] sm       ON o.[object_id] = sm.[object_id]​       WHERE   o.[type] = 'FN'​       GROUP BY ​       sm.[is_inlineable],​       sm.[inline_type]     ",271,170,101,858,0,11122
"       SELECT       db_id() as database_id,       sm.[is_inlineable] AS InlineableScalarCount,​       sm.[inline_type] AS InlineType,​       COUNT_BIG(*) AS ScalarCount, ​       COUNT_BIG(CASE WHEN sm.[definition] LIKE '%getdate%' OR       sm.[definition] LIKE '%getutcdate%' OR ​       sm.[definition] LIKE '%sysdatetime%' OR​       sm.[definition] LIKE '%sysu​tcdatetime%' OR​       sm.[definition] LIKE '%sysdatetimeoffset%' OR​       sm.[definition] LIKE '%CURRENT_TIMESTAMP%'​       THEN 1       END) AS ScalarCountWithDate       FROM    [sys].[objects] o​       INNER JOIN    [sys].[sql_modules] sm       ON o.[object_id] = sm.[object_id]​       WHERE   o.[type] = 'FN'​       GROUP BY ​       sm.[is_inlineable],​       sm.[inline_type]     ",268,167,101,858,0,11012
"       SELECT       db_id() AS database_id,       o.[type] AS object_type,       i.[type] AS index_type,       p.[data_compression],       COUNT_BIG(DISTINCT p.[object_id]) AS NumTables,       COUNT_BIG(DISTINCT CAST(p.[object_id] AS VARCHAR(30)) + '|' + CAST(p.[index_id] AS VARCHAR(10))) AS NumIndexes,       ISNULL(px.[IsPartitioned], 0) AS IsPartitioned,       IIF(px.[IsPartitioned] = 1, COUNT_BIG(1), 0) NumPartitions,       SUM(p.[rows]) NumRows       FROM sys.partitions p       INNER JOIN sys.objects o       ON o.[object_id] = p.[object_id]       INNER JOIN sys.indexes i       ON i.[object_id] = p.[object_id]       AND i.[index_id] = p.[index_id]       OUTER APPLY (SELECT       x.[object_id], 1 AS [IsPartitioned]       FROM sys.partitions x       WHERE x.[object_id] = p.[object_id]       GROUP by       x.[object_id]       HAVING MAX(x.partition_number) > 1) px       WHERE o.[type] NOT IN ('S', 'IT')       GROUP BY       o.[type]       ,i.[type]       ,p.[data_compression]       ,px.[IsPartitioned]     ",264,162,102,4695,0,10863
"       SELECT       db_id() as database_id,       sm.[is_inlineable] AS InlineableScalarCount,​       sm.[inline_type] AS InlineType,​       COUNT_BIG(*) AS ScalarCount, ​       COUNT_BIG(CASE WHEN sm.[definition] LIKE '%getdate%' OR       sm.[definition] LIKE '%getutcdate%' OR ​       sm.[definition] LIKE '%sysdatetime%' OR​       sm.[definition] LIKE '%sysu​tcdatetime%' OR​       sm.[definition] LIKE '%sysdatetimeoffset%' OR​       sm.[definition] LIKE '%CURRENT_TIMESTAMP%'​       THEN 1       END) AS ScalarCountWithDate       FROM    [sys].[objects] o​       INNER JOIN    [sys].[sql_modules] sm       ON o.[object_id] = sm.[object_id]​       WHERE   o.[type] = 'FN'​       GROUP BY ​       sm.[is_inlineable],​       sm.[inline_type]     ",263,166,97,873,0,10799
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE56'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE56] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE56\PERFORMANCE56_backup_2024_04_10_230002_4304313.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE56_backup_2024_04_10_230002_4304313', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",262,98,164,151,0,262
"       SELECT       db_id() as database_id,       sm.[is_inlineable] AS InlineableScalarCount,​       sm.[inline_type] AS InlineType,​       COUNT_BIG(*) AS ScalarCount, ​       COUNT_BIG(CASE WHEN sm.[definition] LIKE '%getdate%' OR       sm.[definition] LIKE '%getutcdate%' OR ​       sm.[definition] LIKE '%sysdatetime%' OR​       sm.[definition] LIKE '%sysu​tcdatetime%' OR​       sm.[definition] LIKE '%sysdatetimeoffset%' OR​       sm.[definition] LIKE '%CURRENT_TIMESTAMP%'​       THEN 1       END) AS ScalarCountWithDate       FROM    [sys].[objects] o​       INNER JOIN    [sys].[sql_modules] sm       ON o.[object_id] = sm.[object_id]​       WHERE   o.[type] = 'FN'​       GROUP BY ​       sm.[is_inlineable],​       sm.[inline_type]     ",259,163,96,871,0,10652
"       SELECT       db_id() as database_id,       sm.[is_inlineable] AS InlineableScalarCount,​       sm.[inline_type] AS InlineType,​       COUNT_BIG(*) AS ScalarCount, ​       COUNT_BIG(CASE WHEN sm.[definition] LIKE '%getdate%' OR       sm.[definition] LIKE '%getutcdate%' OR ​       sm.[definition] LIKE '%sysdatetime%' OR​       sm.[definition] LIKE '%sysu​tcdatetime%' OR​       sm.[definition] LIKE '%sysdatetimeoffset%' OR​       sm.[definition] LIKE '%CURRENT_TIMESTAMP%'​       THEN 1       END) AS ScalarCountWithDate       FROM    [sys].[objects] o​       INNER JOIN    [sys].[sql_modules] sm       ON o.[object_id] = sm.[object_id]​       WHERE   o.[type] = 'FN'​       GROUP BY ​       sm.[is_inlineable],​       sm.[inline_type]     ",259,161,98,871,0,10631
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE\PERFORMANCE_backup_2024_04_16_230001_9972749.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_backup_2024_04_16_230001_9972749', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",257,108,149,151,0,257
"       SELECT       db_id() AS database_id,       o.[type] AS object_type,       i.[type] AS index_type,       p.[data_compression],       COUNT_BIG(DISTINCT p.[object_id]) AS NumTables,       COUNT_BIG(DISTINCT CAST(p.[object_id] AS VARCHAR(30)) + '|' + CAST(p.[index_id] AS VARCHAR(10))) AS NumIndexes,       ISNULL(px.[IsPartitioned], 0) AS IsPartitioned,       IIF(px.[IsPartitioned] = 1, COUNT_BIG(1), 0) NumPartitions,       SUM(p.[rows]) NumRows       FROM sys.partitions p       INNER JOIN sys.objects o       ON o.[object_id] = p.[object_id]       INNER JOIN sys.indexes i       ON i.[object_id] = p.[object_id]       AND i.[index_id] = p.[index_id]       OUTER APPLY (SELECT       x.[object_id], 1 AS [IsPartitioned]       FROM sys.partitions x       WHERE x.[object_id] = p.[object_id]       GROUP by       x.[object_id]       HAVING MAX(x.partition_number) > 1) px       WHERE o.[type] NOT IN ('S', 'IT')       GROUP BY       o.[type]       ,i.[type]       ,p.[data_compression]       ,px.[IsPartitioned]     ",253,154,99,3978,0,10394
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('ManageDataWareHouse'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [ManageDataWareHouse] TO  DISK = N'G:\Backup_SQL\KPI\Full\ManageDataWareHouse\ManageDataWareHouse_backup_2024_04_20_230001_0925221.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'ManageDataWareHouse_backup_2024_04_20_230001_0925221', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",250,98,152,151,0,250
"       SELECT       db_id() AS database_id,       o.[type] AS object_type,       i.[type] AS index_type,       p.[data_compression],       COUNT_BIG(DISTINCT p.[object_id]) AS NumTables,       COUNT_BIG(DISTINCT CAST(p.[object_id] AS VARCHAR(30)) + '|' + CAST(p.[index_id] AS VARCHAR(10))) AS NumIndexes,       ISNULL(px.[IsPartitioned], 0) AS IsPartitioned,       IIF(px.[IsPartitioned] = 1, COUNT_BIG(1), 0) NumPartitions,       SUM(p.[rows]) NumRows       FROM sys.partitions p       INNER JOIN sys.objects o       ON o.[object_id] = p.[object_id]       INNER JOIN sys.indexes i       ON i.[object_id] = p.[object_id]       AND i.[index_id] = p.[index_id]       OUTER APPLY (SELECT       x.[object_id], 1 AS [IsPartitioned]       FROM sys.partitions x       WHERE x.[object_id] = p.[object_id]       GROUP by       x.[object_id]       HAVING MAX(x.partition_number) > 1) px       WHERE o.[type] NOT IN ('S', 'IT')       GROUP BY       o.[type]       ,i.[type]       ,p.[data_compression]       ,px.[IsPartitioned]     ",248,154,94,4689,0,10172
"       SELECT       db_id() AS database_id,       o.[type] AS object_type,       i.[type] AS index_type,       p.[data_compression],       COUNT_BIG(DISTINCT p.[object_id]) AS NumTables,       COUNT_BIG(DISTINCT CAST(p.[object_id] AS VARCHAR(30)) + '|' + CAST(p.[index_id] AS VARCHAR(10))) AS NumIndexes,       ISNULL(px.[IsPartitioned], 0) AS IsPartitioned,       IIF(px.[IsPartitioned] = 1, COUNT_BIG(1), 0) NumPartitions,       SUM(p.[rows]) NumRows       FROM sys.partitions p       INNER JOIN sys.objects o       ON o.[object_id] = p.[object_id]       INNER JOIN sys.indexes i       ON i.[object_id] = p.[object_id]       AND i.[index_id] = p.[index_id]       OUTER APPLY (SELECT       x.[object_id], 1 AS [IsPartitioned]       FROM sys.partitions x       WHERE x.[object_id] = p.[object_id]       GROUP by       x.[object_id]       HAVING MAX(x.partition_number) > 1) px       WHERE o.[type] NOT IN ('S', 'IT')       GROUP BY       o.[type]       ,i.[type]       ,p.[data_compression]       ,px.[IsPartitioned]     ",238,146,92,3941,0,9773
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE_TEST'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE_TEST] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE_TEST\PERFORMANCE_TEST_backup_2024_04_18_230002_4458147.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_TEST_backup_2024_04_18_230002_4458147', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",236,109,127,151,0,236
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_04_21_230001_8162319.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_04_21_230001_8162319', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",235,160,75,236,0,235
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_04_14_230002_0704918.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_04_14_230002_0704918', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",227,124,103,236,0,227
"SELECT     DB_NAME (database_id) as [Database Name],     name as [Database File Name],     [Type] = CASE WHEN Type_Desc = 'ROWS' THEN 'Data File(s)'             WHEN Type_Desc = 'LOG'  THEN 'Log File(s)'             ELSE Type_Desc END,     size*8/1024 as 'Size (MB)',     physical_name as [Database_File_Location] FROM sys.master_files ORDER BY 1,3  IF OBJECT_ID('tempdb.dbo.#space') IS NOT NULL     DROP TABLE #space  CREATE TABLE #space (       database_id INT PRIMARY KEY     , data_used_size DECIMAL(18,2)     , log_used_size DECIMAL(18,2) )  DECLARE @SQL NVARCHAR(MAX)  SELECT @SQL = STUFF((     SELECT '     USE [' + d.name + ']     INSERT INTO #space (database_id, data_used_size, log_used_size)     SELECT           DB_ID()         , SUM(CASE WHEN [type] = 0 THEN space_used END)         , SUM(CASE WHEN [type] = 1 THEN space_used END)     FROM (         SELECT s.[type], space_used = SUM(FILEPROPERTY(s.name, ''SpaceUsed'') * 8. / 1024)         FROM sys.database_files s         GROUP BY s.[type]     ) t;'     FROM sys.databases d     WHERE d.[state] = 0     FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 2, '')  EXEC sys.sp_executesql @SQL  SELECT       d.database_id     , d.name     , d.state_desc     , d.recovery_model_desc     , t.total_size     , t.data_size     , s.data_used_size     , t.log_size     , s.log_used_size     , bu.full_last_date     , bu.full_size     , bu.log_last_date     , bu.log_size FROM (     SELECT           database_id         , log_size = CAST(SUM(CASE WHEN [type] = 1 THEN size END) * 8. / 1024 AS DECIMAL(18,2))         , data_size = CAST(SUM(CASE WHEN [type] = 0 THEN size END) * 8. / 1024 AS DECIMAL(18,2))         , total_size = CAST(SUM(size) * 8. / 1024 AS DECIMAL(18,2))     FROM sys.master_files     GROUP BY database_id ) t JOIN sys.databases d ON d.database_id = t.database_id LEFT JOIN #space s ON d.database_id = s.database_id LEFT JOIN (     SELECT           database_name         , full_last_date = MAX(CASE WHEN [type] = 'D' THEN backup_finish_date END)         , full_size = MAX(CASE WHEN [type] = 'D' THEN backup_size END)         , log_last_date = MAX(CASE WHEN [type] = 'L' THEN backup_finish_date END)         , log_size = MAX(CASE WHEN [type] = 'L' THEN backup_size END)     FROM (         SELECT               s.database_name             , s.[type]             , s.backup_finish_date             , backup_size =                         CAST(CASE WHEN s.backup_size = s.compressed_backup_size                                     THEN s.backup_size                                     ELSE s.compressed_backup_size                         END / 1048576.0 AS DECIMAL(18,2))             , RowNum = ROW_NUMBER() OVER (PARTITION BY s.database_name, s.[type] ORDER BY s.backup_finish_date DESC)         FROM msdb.dbo.backupset s         WHERE s.[type] IN ('D', 'L')     ) f     WHERE f.RowNum = 1     GROUP BY f.database_name ) bu ON d.name = bu.database_name ORDER BY t.total_size DESC  SELECT      req.session_id     , req.total_elapsed_time AS duration_ms     , req.cpu_time AS cpu_time_ms     , req.total_elapsed_time - req.cpu_time AS wait_time     , req.logical_reads     , SUBSTRING (REPLACE (REPLACE (SUBSTRING (ST.text, (req.statement_start_offset/2) + 1,         ((CASE statement_end_offset            WHEN -1            THEN DATALENGTH(ST.text)              ELSE req.statement_end_offset          END - req.statement_start_offset)/2) + 1) , CHAR(10), ' '), CHAR(13), ' '),        1, 512)  AS statement_text   FROM sys.dm_exec_requests AS req     CROSS APPLY sys.dm_exec_sql_text(req.sql_handle) AS ST ORDER BY total_elapsed_time DESC;  SELECT top 100 t.text,      (qs.total_elapsed_time/1000) / qs.execution_count AS avg_elapsed_time,      (qs.total_worker_time/1000) / qs.execution_count AS avg_cpu_time,      ((qs.total_elapsed_time/1000) / qs.execution_count ) - ((qs.total_worker_time/1000) / qs.execution_count) AS avg_wait_time,      qs.total_logical_reads / qs.execution_count AS avg_logical_reads,      qs.total_logical_writes / qs.execution_count AS avg_writes,      (qs.total_elapsed_time/1000) AS cumulative_elapsed_time_all_executions FROM sys.dm_exec_query_stats qs      CROSS apply sys.Dm_exec_sql_text (sql_handle) t -- WHERE t.text like '<Your Query>%' -- Replace <Your Query> with your query or the beginning part of your query. The special chars like '[','_','%','^' in the query should be escaped. ORDER BY (qs.total_elapsed_time / qs.execution_count) DESC  --Deadlock sql check SELECT     session_id,     start_time,      [status],     command,     blocking_session_id,     wait_type,     wait_time,     open_transaction_count,     transaction_id,     total_elapsed_time,     Definition = CAST(text AS VARCHAR(MAX)) FROM     SYS.DM_EXEC_REQUESTS     CROSS APPLY sys.dm_exec_sql_text(sql_handle)  WHERE blocking_session_id != 0  SELECT sqlserver_start_time, (committed_kb/1024) AS Total_Server_Memory_MB, (committed_target_kb/1024)  AS Target_Server_Memory_MB FROM sys.dm_os_sys_info; ",226,41,185,27618,962,226
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_04_16_230001_9403655.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_04_16_230001_9403655', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",226,141,85,236,0,226
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE\PERFORMANCE_backup_2024_04_17_230002_2330006.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_backup_2024_04_17_230002_2330006', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",225,115,110,151,0,225
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE63'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE63] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE63\PERFORMANCE63_backup_2024_03_26_230001_8088150.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE63_backup_2024_03_26_230001_8088150', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",224,105,119,151,0,224
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE\PERFORMANCE_backup_2024_04_05_230002_1239902.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_backup_2024_04_05_230002_1239902', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",213,89,124,151,0,213
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE59'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE59] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE59\PERFORMANCE59_backup_2024_04_19_230002_9451160.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE59_backup_2024_04_19_230002_9451160', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",212,97,115,148,0,212
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_04_13_230001_5482414.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_04_13_230001_5482414', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",206,129,77,272,0,206
"       SELECT       db_id() AS database_id,       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.is_filestream,       c.encryption_type,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END AS is_user,       COUNT_BIG(*) AS [ColCount],       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END AS collation_name,       AVG(c.max_length) AS avg_max_length       FROM sys.columns c WITH (NOLOCK)       LEFT OUTER JOIN sys.objects o WITH (NOLOCK)       ON o.object_id = c.object_id       AND o.type = 'U'       GROUP BY       c.system_type_id,       c.user_type_id,       c.is_sparse,       c.is_column_set,       c.encryption_type,       c.is_filestream,       CASE WHEN o.object_id IS NOT NULL THEN 1 ELSE 0 END,       CASE WHEN c.collation_name IS NULL THEN CONVERT(VARCHAR(128), SERVERPROPERTY('Collation')) ELSE c.collation_name END     ",201,119,82,238,0,8255
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_04_07_230002_0470807.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_04_07_230002_0470807', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",195,115,80,272,0,195
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('THPOST_SEARCH'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [THPOST_SEARCH] TO  DISK = N'G:\Backup_SQL\KPI\Full\THPOST_SEARCH\THPOST_SEARCH_backup_2024_03_31_230002_2158053.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'THPOST_SEARCH_backup_2024_03_31_230002_2158053', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",193,93,100,148,0,193
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE63'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE63] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE63\PERFORMANCE63_backup_2024_04_10_230002_3555518.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE63_backup_2024_04_10_230002_3555518', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",193,110,83,151,0,193
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE63'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE63] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE63\PERFORMANCE63_backup_2024_04_16_230002_0491931.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE63_backup_2024_04_16_230002_0491931', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",192,130,62,151,0,192
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_04_17_230002_1341591.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_04_17_230002_1341591', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",192,113,79,236,0,192
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_04_22_230002_1521358.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_04_22_230002_1521358', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",192,133,59,236,0,192
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE_TEST'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE_TEST] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE_TEST\PERFORMANCE_TEST_backup_2024_04_20_230001_2672417.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_TEST_backup_2024_04_20_230001_2672417', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",191,86,105,151,0,191
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_04_19_230002_6316331.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_04_19_230002_6316331', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",189,119,70,236,0,189
" create table #OLEDBProv ( Name sysname NOT NULL, ParseName sysname NOT  			NULL,Description sysname NOT NULL ) insert #OLEDBProv EXECUTE master.dbo.xp_enum_oledb_providers   SELECT op.Name AS [Name], 'Server[@Name=' + quotename(CAST(         serverproperty(N'Servername')        AS sysname),'''') + ']' + '/OLEDBProvider[@Name=' + quotename(op.Name,'''') + ']' AS [Urn] FROM #OLEDBProv op ORDER BY [Name] ASC  drop table #OLEDBProv ",187,185,2,97,8,187
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('THPOST_SEARCH'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [THPOST_SEARCH] TO  DISK = N'G:\Backup_SQL\KPI\Full\THPOST_SEARCH\THPOST_SEARCH_backup_2024_03_26_230002_0144775.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'THPOST_SEARCH_backup_2024_03_26_230002_0144775', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",186,101,85,148,0,186
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE_DEV'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE_DEV] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE_DEV\PERFORMANCE_DEV_backup_2024_04_04_230002_2675569.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_DEV_backup_2024_04_04_230002_2675569', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",185,94,91,151,0,185
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE\PERFORMANCE_backup_2024_04_14_230002_2322295.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_backup_2024_04_14_230002_2322295', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",184,126,58,151,0,184
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE63'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE63] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE63\PERFORMANCE63_backup_2024_03_29_230001_4358980.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE63_backup_2024_03_29_230001_4358980', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",182,87,95,151,0,182
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE56'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE56] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE56\PERFORMANCE56_backup_2024_03_26_230001_8707130.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE56_backup_2024_03_26_230001_8707130', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",177,80,97,151,0,177
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('THPOST_SEARCH'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [THPOST_SEARCH] TO  DISK = N'G:\Backup_SQL\KPI\Full\THPOST_SEARCH\THPOST_SEARCH_backup_2024_04_19_230003_0519395.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'THPOST_SEARCH_backup_2024_04_19_230003_0519395', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",176,96,80,148,0,176
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_04_10_230002_2207679.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_04_10_230002_2207679', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",176,108,68,236,0,176
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE64'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE64] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE64\PERFORMANCE64_backup_2024_04_09_230002_4166374.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE64_backup_2024_04_09_230002_4166374', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",173,108,65,151,0,173
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE_DEV'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE_DEV] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE_DEV\PERFORMANCE_DEV_backup_2024_04_15_230001_9518693.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_DEV_backup_2024_04_15_230001_9518693', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",173,85,88,151,0,173
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE\PERFORMANCE_backup_2024_04_22_230002_2050496.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_backup_2024_04_22_230002_2050496', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",172,92,80,151,0,172
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE\PERFORMANCE_backup_2024_04_10_230002_2946492.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_backup_2024_04_10_230002_2946492', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",169,111,58,151,0,169
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('ManageDataWareHouse'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [ManageDataWareHouse] TO  DISK = N'G:\Backup_SQL\KPI\Full\ManageDataWareHouse\ManageDataWareHouse_backup_2024_04_15_230001_8909667.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'ManageDataWareHouse_backup_2024_04_15_230001_8909667', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",169,91,78,151,0,169
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_04_18_230002_2810787.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_04_18_230002_2810787', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",168,129,39,272,0,168
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_03_19_230001_9463795.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_03_19_230001_9463795', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",167,127,40,236,0,167
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE_TEST'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE_TEST] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE_TEST\PERFORMANCE_TEST_backup_2024_04_04_230002_3893614.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_TEST_backup_2024_04_04_230002_3893614', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",165,88,77,151,0,165
"declare      @CPU_Usage_Percentage int,      @Total_SQL_Server_Memory_MB int   -- CPU WITH y AS (     SELECT               CONVERT(VARCHAR(5), 100 - ca.c.value('.', 'INT')) AS system_idle,         CONVERT(VARCHAR(30), rb.event_date) AS event_date,         CONVERT(VARCHAR(8000), rb.record) AS record     FROM (            SELECT              CONVERT(XML, dorb.record) AS record,             DATEADD(ms, ( ts.ms_ticks - dorb.timestamp ), GETDATE()) AS event_date         FROM   sys.dm_os_ring_buffers AS dorb             CROSS JOIN (                  SELECT                      dosi.ms_ticks                  FROM sys.dm_os_sys_info AS dosi ) AS ts                 WHERE   dorb.ring_buffer_type = N'RING_BUFFER_SCHEDULER_MONITOR'                         AND record LIKE '%%' ) AS rb             CROSS APPLY rb.record.nodes('/Record/SchedulerMonitorEvent/SystemHealth/SystemIdle') AS ca(c)         )     SELECT @CPU_Usage_Percentage = (select          TOP 1 y.system_idle     FROM y      ORDER BY y.event_date DESC)   -- memory select @Total_SQL_Server_Memory_MB = (select      cntr_value / 1024 from sys.dm_os_performance_counters pc where   [object_name] = 'SQLServer:Memory Manager'         and counter_name = 'Total Server Memory (KB)'                                                                                                         )   select      @CPU_Usage_Percentage           [CPU_Usage_Percentage],      @Total_SQL_Server_Memory_MB     [Total_SQL_Server_Memory_MB]; 	 WITH DB_CPU_Stats AS (SELECT pa.DatabaseID, DB_Name(pa.DatabaseID) AS [Database Name], SUM(qs.total_worker_time/1000) AS [CPU_Time_Ms]  FROM sys.dm_exec_query_stats AS qs WITH (NOLOCK)  CROSS APPLY (SELECT CONVERT(int, value) AS [DatabaseID]               FROM sys.dm_exec_plan_attributes(qs.plan_handle)               WHERE attribute = N'dbid') AS pa  GROUP BY DatabaseID) SELECT ROW_NUMBER() OVER(ORDER BY [CPU_Time_Ms] DESC) AS [CPU Rank],        [Database Name], [CPU_Time_Ms] AS [CPU Time (ms)],        CAST([CPU_Time_Ms] * 1.0 / SUM([CPU_Time_Ms]) OVER() * 100.0 AS DECIMAL(5, 2)) AS [CPU Percent] FROM DB_CPU_Stats WHERE DatabaseID <> 32767 -- ResourceDB ORDER BY [CPU Rank] OPTION (RECOMPILE);   DECLARE @total_buffer INT;  SELECT @total_buffer = cntr_value FROM sys.dm_os_performance_counters  WHERE RTRIM([object_name]) LIKE '%Buffer Manager' AND counter_name = 'Database Pages';  ;WITH src AS (   SELECT    database_id, db_buffer_pages = COUNT_BIG(*)   FROM sys.dm_os_buffer_descriptors   --WHERE database_id BETWEEN 5 AND 32766   GROUP BY database_id ) SELECT [db_name] = CASE [database_id] WHEN 32767  THEN 'Resource DB'  ELSE DB_NAME([database_id]) END, db_buffer_pages, db_buffer_MB = db_buffer_pages / 128, db_buffer_percent = CONVERT(DECIMAL(6,3),  db_buffer_pages * 100.0 / @total_buffer) FROM src ORDER BY db_buffer_MB DESC;  ",164,164,0,0,0,164
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE\PERFORMANCE_backup_2024_03_26_230001_7449202.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_backup_2024_03_26_230001_7449202', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",163,82,81,151,0,163
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE_DEV'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE_DEV] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE_DEV\PERFORMANCE_DEV_backup_2024_04_11_230002_2282487.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_DEV_backup_2024_04_11_230002_2282487', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",161,80,81,151,0,161
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('ManageDataWareHouse'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [ManageDataWareHouse] TO  DISK = N'G:\Backup_SQL\KPI\Full\ManageDataWareHouse\ManageDataWareHouse_backup_2024_04_09_230002_2598893.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'ManageDataWareHouse_backup_2024_04_09_230002_2598893', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",161,87,74,151,0,161
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE_TEST'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE_TEST] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE_TEST\PERFORMANCE_TEST_backup_2024_04_01_230002_2157146.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_TEST_backup_2024_04_01_230002_2157146', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",159,68,91,151,0,159
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE\PERFORMANCE_backup_2024_04_18_230002_3549599.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_backup_2024_04_18_230002_3549599', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",157,103,54,151,0,157
" DECLARE @total_buffer INT;  SELECT @total_buffer = cntr_value FROM sys.dm_os_performance_counters  WHERE RTRIM([object_name]) LIKE '%Buffer Manager' AND counter_name = 'Database Pages';  ;WITH src AS (   SELECT    database_id, db_buffer_pages = COUNT_BIG(*)   FROM sys.dm_os_buffer_descriptors   --WHERE database_id BETWEEN 5 AND 32766   GROUP BY database_id ) SELECT [db_name] = CASE [database_id] WHEN 32767  THEN 'Resource DB'  ELSE DB_NAME([database_id]) END, db_buffer_pages, db_buffer_MB = db_buffer_pages / 128, db_buffer_percent = CONVERT(DECIMAL(6,3),  db_buffer_pages * 100.0 / @total_buffer) FROM src ORDER BY db_buffer_MB DESC;  ",157,157,0,0,0,157
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE\PERFORMANCE_backup_2024_04_19_230002_6815509.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_backup_2024_04_19_230002_6815509', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",156,89,67,151,0,156
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_04_01_230002_0479855.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_04_01_230002_0479855', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",156,110,46,236,0,156
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE63'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE63] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE63\PERFORMANCE63_backup_2024_04_13_230001_8437700.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE63_backup_2024_04_13_230001_8437700', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",155,86,69,151,0,155
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE_TEST'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE_TEST] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE_TEST\PERFORMANCE_TEST_backup_2024_03_20_230002_0574498.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_TEST_backup_2024_03_20_230002_0574498', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",154,94,60,151,0,154
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('ManageDataWareHouse'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [ManageDataWareHouse] TO  DISK = N'G:\Backup_SQL\KPI\Full\ManageDataWareHouse\ManageDataWareHouse_backup_2024_03_27_230002_3215462.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'ManageDataWareHouse_backup_2024_03_27_230002_3215462', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",153,82,71,151,0,153
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE\PERFORMANCE_backup_2024_03_23_230001_9615654.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_backup_2024_03_23_230001_9615654', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",152,92,60,151,0,152
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_04_04_230002_0998265.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_04_04_230002_0998265', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",150,101,49,236,0,150
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE63'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE63] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE63\PERFORMANCE63_backup_2024_04_21_230001_9650006.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE63_backup_2024_04_21_230001_9650006', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",147,79,68,151,0,147
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('THPOST_SEARCH'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [THPOST_SEARCH] TO  DISK = N'G:\Backup_SQL\KPI\Full\THPOST_SEARCH\THPOST_SEARCH_backup_2024_03_27_230002_8267332.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'THPOST_SEARCH_backup_2024_03_27_230002_8267332', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",147,75,72,148,0,147
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE59'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE59] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE59\PERFORMANCE59_backup_2024_03_27_230002_6999372.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE59_backup_2024_03_27_230002_6999372', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",145,104,41,148,0,145
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE\PERFORMANCE_backup_2024_03_20_230001_9626001.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_backup_2024_03_20_230001_9626001', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",145,88,57,151,0,145
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_04_11_230002_1324065.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_04_11_230002_1324065', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",144,97,47,236,0,144
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE59'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE59] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE59\PERFORMANCE59_backup_2024_03_31_230002_1379319.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE59_backup_2024_03_31_230002_1379319', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",144,91,53,148,0,144
"SELECT     DB_NAME (database_id) as [Database Name],     name as [Database File Name],     [Type] = CASE WHEN Type_Desc = 'ROWS' THEN 'Data File(s)'             WHEN Type_Desc = 'LOG'  THEN 'Log File(s)'             ELSE Type_Desc END,     size*8/1024 as 'Size (MB)',     physical_name as [Database_File_Location] FROM sys.master_files ORDER BY 1,3  IF OBJECT_ID('tempdb.dbo.#space') IS NOT NULL     DROP TABLE #space  CREATE TABLE #space (       database_id INT PRIMARY KEY     , data_used_size DECIMAL(18,2)     , log_used_size DECIMAL(18,2) )  DECLARE @SQL NVARCHAR(MAX)  SELECT @SQL = STUFF((     SELECT '     USE [' + d.name + ']     INSERT INTO #space (database_id, data_used_size, log_used_size)     SELECT           DB_ID()         , SUM(CASE WHEN [type] = 0 THEN space_used END)         , SUM(CASE WHEN [type] = 1 THEN space_used END)     FROM (         SELECT s.[type], space_used = SUM(FILEPROPERTY(s.name, ''SpaceUsed'') * 8. / 1024)         FROM sys.database_files s         GROUP BY s.[type]     ) t;'     FROM sys.databases d     WHERE d.[state] = 0     FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 2, '')  EXEC sys.sp_executesql @SQL  SELECT       d.database_id     , d.name     , d.state_desc     , d.recovery_model_desc     , t.total_size     , t.data_size     , s.data_used_size     , t.log_size     , s.log_used_size     , bu.full_last_date     , bu.full_size     , bu.log_last_date     , bu.log_size FROM (     SELECT           database_id         , log_size = CAST(SUM(CASE WHEN [type] = 1 THEN size END) * 8. / 1024 AS DECIMAL(18,2))         , data_size = CAST(SUM(CASE WHEN [type] = 0 THEN size END) * 8. / 1024 AS DECIMAL(18,2))         , total_size = CAST(SUM(size) * 8. / 1024 AS DECIMAL(18,2))     FROM sys.master_files     GROUP BY database_id ) t JOIN sys.databases d ON d.database_id = t.database_id LEFT JOIN #space s ON d.database_id = s.database_id LEFT JOIN (     SELECT           database_name         , full_last_date = MAX(CASE WHEN [type] = 'D' THEN backup_finish_date END)         , full_size = MAX(CASE WHEN [type] = 'D' THEN backup_size END)         , log_last_date = MAX(CASE WHEN [type] = 'L' THEN backup_finish_date END)         , log_size = MAX(CASE WHEN [type] = 'L' THEN backup_size END)     FROM (         SELECT               s.database_name             , s.[type]             , s.backup_finish_date             , backup_size =                         CAST(CASE WHEN s.backup_size = s.compressed_backup_size                                     THEN s.backup_size                                     ELSE s.compressed_backup_size                         END / 1048576.0 AS DECIMAL(18,2))             , RowNum = ROW_NUMBER() OVER (PARTITION BY s.database_name, s.[type] ORDER BY s.backup_finish_date DESC)         FROM msdb.dbo.backupset s         WHERE s.[type] IN ('D', 'L')     ) f     WHERE f.RowNum = 1     GROUP BY f.database_name ) bu ON d.name = bu.database_name ORDER BY t.total_size DESC  SELECT      req.session_id     , req.total_elapsed_time AS duration_ms     , req.cpu_time AS cpu_time_ms     , req.total_elapsed_time - req.cpu_time AS wait_time     , req.logical_reads     , SUBSTRING (REPLACE (REPLACE (SUBSTRING (ST.text, (req.statement_start_offset/2) + 1,         ((CASE statement_end_offset            WHEN -1            THEN DATALENGTH(ST.text)              ELSE req.statement_end_offset          END - req.statement_start_offset)/2) + 1) , CHAR(10), ' '), CHAR(13), ' '),        1, 512)  AS statement_text   FROM sys.dm_exec_requests AS req     CROSS APPLY sys.dm_exec_sql_text(req.sql_handle) AS ST ORDER BY total_elapsed_time DESC;  SELECT top 100 t.text,      (qs.total_elapsed_time/1000) / qs.execution_count AS avg_elapsed_time,      (qs.total_worker_time/1000) / qs.execution_count AS avg_cpu_time,      ((qs.total_elapsed_time/1000) / qs.execution_count ) - ((qs.total_worker_time/1000) / qs.execution_count) AS avg_wait_time,      qs.total_logical_reads / qs.execution_count AS avg_logical_reads,      qs.total_logical_writes / qs.execution_count AS avg_writes,      (qs.total_elapsed_time/1000) AS cumulative_elapsed_time_all_executions FROM sys.dm_exec_query_stats qs      CROSS apply sys.Dm_exec_sql_text (sql_handle) t -- WHERE t.text like '<Your Query>%' -- Replace <Your Query> with your query or the beginning part of your query. The special chars like '[','_','%','^' in the query should be escaped. ORDER BY (qs.total_elapsed_time / qs.execution_count) DESC  --Deadlock sql check SELECT     session_id,     start_time,      [status],     command,     blocking_session_id,     wait_type,     wait_time,     open_transaction_count,     transaction_id,     total_elapsed_time,     Definition = CAST(text AS VARCHAR(MAX)) FROM     SYS.DM_EXEC_REQUESTS     CROSS APPLY sys.dm_exec_sql_text(sql_handle)  WHERE blocking_session_id != 0   ",141,20,121,14532,378,283
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE63'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE63] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE63\PERFORMANCE63_backup_2024_04_05_230002_2278268.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE63_backup_2024_04_05_230002_2278268', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",141,79,62,151,0,141
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE64'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE64] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE64\PERFORMANCE64_backup_2024_04_04_230002_4542574.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE64_backup_2024_04_04_230002_4542574', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",140,89,51,151,0,140
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE56'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE56] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE56\PERFORMANCE56_backup_2024_03_29_230001_4948034.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE56_backup_2024_03_29_230001_4948034', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",140,72,68,151,0,140
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE56'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE56] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE56\PERFORMANCE56_backup_2024_04_01_230002_2516574.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE56_backup_2024_04_01_230002_2516574', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",140,68,72,151,0,140
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_03_20_230001_8907155.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_03_20_230001_8907155', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",139,91,48,236,0,139
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('THPOST_SEARCH'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [THPOST_SEARCH] TO  DISK = N'G:\Backup_SQL\KPI\Full\THPOST_SEARCH\THPOST_SEARCH_backup_2024_03_29_230001_6036270.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'THPOST_SEARCH_backup_2024_03_29_230001_6036270', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",138,82,56,148,0,138
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE64'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE64] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE64\PERFORMANCE64_backup_2024_04_17_230002_4286848.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE64_backup_2024_04_17_230002_4286848', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",137,82,55,148,0,137
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE59'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE59] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE59\PERFORMANCE59_backup_2024_04_10_230002_4903354.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE59_backup_2024_04_10_230002_4903354', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",137,77,60,151,0,137
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('SSISDB'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [SSISDB] TO  DISK = N'G:\Backup_SQL\KPI\Full\SSISDB\SSISDB_backup_2024_04_12_230002_1758582.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'SSISDB_backup_2024_04_12_230002_1758582', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",137,97,40,236,0,137
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE\PERFORMANCE_backup_2024_04_13_230001_6710456.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE_backup_2024_04_13_230001_6710456', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",137,72,65,151,0,137
"()begin try  use msdb;  declare @enable int; select @enable = convert(int, value_in_use) from sys.configurations where name = 'default trace enabled'  if @enable = 1   begin          declare @curr_tracefilename varchar(500);         declare @base_tracefilename varchar(500);         declare @status int;          declare @indx int;            declare @temp_trace table (                  Error int         ,       StartTime datetime         ,       HostName sysname collate database_default null         ,       ApplicationName sysname collate database_default  null         ,       LoginName sysname collate database_default null         ,       Severity int         ,       DatabaseName sysname collate database_default null         ,       TextData nvarchar(max) collate database_default          );          declare @path_separator CHAR(1) ;         set @path_separator = ISNULL(CONVERT(CHAR(1), serverproperty('PathSeparator')), '\') ;          select @status=status, @curr_tracefilename=path from sys.traces where is_default = 1 ;         set @curr_tracefilename = reverse(@curr_tracefilename)          select @indx  = patindex('%'+@path_separator+'%', @curr_tracefilename)           set @curr_tracefilename = reverse(@curr_tracefilename)          set @base_tracefilename = left( @curr_tracefilename,len(@curr_tracefilename) - @indx) + @path_separator + 'log.trc';                  insert into @temp_trace          select Error         ,       StartTime         ,       HostName         ,       ApplicationName         ,       LoginName         ,       Severity         ,       DatabaseName         ,       TextData           from ::fn_trace_gettable( @base_tracefilename, default )          where substring(TextData, 20, 15) like '%Backup%' and TextData like '%Error%' and ServerName = @@servername ;                    select (row_number() over(order by StartTime desc))%2 as l1         ,       right( right( TextData, len(TextData) - patindex('%BACKUP%',TextData) ) , len(right( TextData, len(TextData) - patindex('%BACKUP%',TextData) )) - patindex('%BACKUP%',right( TextData, len(TextData) - patindex('%BACKUP%',TextData) )) - 10 ) as ErrorMessage         ,       Error         ,       Severity         ,       StartTime         ,       HostName         ,       ApplicationName         ,       LoginName         ,       DatabaseName           from @temp_trace            where DatabaseName = '""  & Parameters!DatabaseName.Value &  ""'           order by StartTime desc  end else  begin          select top 0 1 as ErrorMessage, 1 as Error, 1 as Severity, 1 as StartTime,1 as HostName, 1 as ApplicationName,1 as LoginName, 1 as DatabaseName, 1 as l1  end  end try  begin catch  select ERROR_MESSAGE() as ErrorMessage ,       ERROR_NUMBER() as Error ,       ERROR_SEVERITY() as Severity ,       ERROR_STATE() as StartTime ,       1 as HostName, 1 as ApplicationName,1 as LoginName, 1 as DatabaseName ,       -100 as l1  end catch",134,133,1,0,0,134
"DECLARE @preferredReplica int  SET @preferredReplica = (SELECT [master].sys.fn_hadr_backup_is_preferred_replica('PERFORMANCE59'))  IF (@preferredReplica = 1) BEGIN     BACKUP DATABASE [PERFORMANCE59] TO  DISK = N'G:\Backup_SQL\KPI\Full\PERFORMANCE59\PERFORMANCE59_backup_2024_04_16_230002_1640100.bak' WITH  RETAINDAYS = 7, NOFORMAT, NOINIT,  NAME = N'PERFORMANCE59_backup_2024_04_16_230002_1640100', SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 10 END ",133,80,53,148,0,133
